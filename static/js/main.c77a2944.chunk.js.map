{"version":3,"sources":["data/FieldData.js","data/PackageData.js","data/BulkFieldData.js","components/modals/ConsignmentModal.js","components/modals/BulkConsignmentModal.js","components/common/PackageComponent.js","api/index.js","components/modals/LocationModal.js","components/Consignments.js","data/GodownData.js","components/modals/GodownModal.js","components/Godowns.js","data/ItemData.js","components/modals/ItemModal.js","components/Items.js","data/SupplierData.js","components/modals/SupplierModal.js","components/Suppliers.js","components/Filter.js","components/Homepage.js","images/cryptocurrency.png","components/Navbar.js","App.js","index.js","components/common/InputField.js","components/common/SelectField.js"],"names":["FieldData","label","name","type","inputType","list","PackageData","BulkFieldData","ConsignmentModal","visible","setVisible","data","fetchConsignments","initialData","reduce","previous","field","useState","formData","setFormData","items","setItems","fitems","setFItems","suppliers","setSuppliers","fsuppliers","setFSuppliers","transporters","setTransporters","ftransporters","setFTransporters","godowns","setGodowns","fgodowns","setFGodowns","onChange","e","target","value","useEffect","fetchItems","onSubmit","close","a","console","log","updateConsignment","id","response","status","swal","createConsignment","getAllItems","entity","getAllSuppliers","responses","getAllTransporters","trresponses","getAllGodowns","godownResponse","onSelectChange","handleSearch","eval","title","width","style","top","onCancel","footer","onClick","map","option","item","text","showSearch","optionFilterProp","showArrow","onSearch","filterOption","input","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","Title","Typography","BulkConsignmentModal","packageList","setPackageList","onClose","length","createBulkConsignment","setPackageData","index","renderPackages","renderList","numberOfPackage","count","parseInt","i","push","className","level","span","PackageComponent","placeholder","ele","Option","url","window","location","hostname","API","axios","create","baseURL","getAllConsigment","filter","get","consigment","post","getConsignment","updatedConsigment","put","deleteConsignment","delete","changeConsignmentLocation","createGodown","godown","updateGodown","deleteGodown","createItem","updateItem","deleteItem","createSupplier","supplier","updateSupplier","deleteSupplier","getAllStats","getFilterMetaData","filterConsignments","LocationModal","consigmentData","consignmentId","consignmentNo","godownId","godownValue","date","moment","format","setConsigment","getGodowns","addLocation","icon","dangerMode","fetched","columns","Text","ellipsis","dataIndex","key","ConsigmentLocation","createdAt","sort","b","SelectField","dataSource","Consigments","consigments","filterApplied","visibleCM","setVisibleCM","editData","setEditData","actionColumn","SetActionCol","visibleLM","setVisibleLM","editLData","visibleBCM","setVisibleBCM","onDelete","confirm","onCopy","uniqueMap","current","Set","add","column","Date","getTime","Math","random","filters","Array","from","filterMode","filterSearch","onFilter","record","startsWith","actionCol","fixed","render","onEdit","EditOutlined","DeleteOutlined","CopyOutlined","searchValue","document","getElementById","PlusSquareOutlined","con","bordered","scroll","x","pagination","pageSize","rowKey","GodownData","GodownModal","callback","InputField","lcol","icol","Godowns","refresh","fetchGodowns","ItemData","ItemModal","Items","SupplierData","SupplierModal","Suppliers","fetchSuppliers","RangePicker","DatePicker","Filter","filterCallback","consignments","privateMarks","setFilter","transporter","privateMark","fromDate","toDate","month","selectedFilter","setSelectedFilter","applyFilter","filterBody","filterResponse","resetFilter","config","mode","allowClear","handleChange","dateRender","border","borderRadius","picker","Homepage","setConsignments","itemCount","consignmentCount","packageCount","supplierCount","godownCount","globalStats","setStats","setFilterApplied","sValue","statsResponse","serachConsignment","handleKeyPress","event","gutter","millify","onKeyPress","SearchOutlined","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","innerWidth","addEventListener","removeEventListener","linkClick","divElement","offsetTop","src","size","to","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","App","exact","path","ReactDOM","StrictMode","inputProps","Select","property","selected"],"mappings":"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","file":"static/js/main.c77a2944.chunk.js","sourcesContent":["const FieldData = [\n    {\n        label : \"Month\",\n        name: 'month',\n        type: 'input',\n        inputType: 'month'\n    },\n    {\n        label : \"Date\",\n        name: 'entrydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Consignment Number\",\n        name: 'consignmentNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Transporter\",\n        name: 'transporter',\n        type: 'select',\n        inputType: 'text',\n        list: 'transporters'\n    },\n    {\n        label : \"Supplier\",\n        name: 'supplier',\n        type: 'select',\n        inputType: 'text',\n        list: 'suppliers'\n    },\n    {\n        label : \"Godowns\",\n        name: 'godown',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    },\n    {\n        label : \"Privart Mark\",\n        name: 'privartMark',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Number Of Package\",\n        name: 'numberOfPackage',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Weight\",\n        name: 'weight',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Quantity\",\n        name: 'quantity',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Item\",\n        name: 'item',\n        type: 'select',\n        inputType: 'text',\n        list: 'items'\n    },\n    {\n        label : \"Bill Number\",\n        name: 'billNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Bill Date\",\n        name: 'billDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount Declared\",\n        name: 'amountDeclared',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Rate\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"EWAY Bill No\",\n        name: 'ewaybillNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"MR Number\",\n        name: 'mrno',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"MR Date\",\n        name: 'mrdate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount\",\n        name: 'amount',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Delivery Date\",\n        name: 'deliverydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    // {\n    //     label : \"Challan Number\",\n    //     name: 'challanNumber',\n    //     type: 'input',\n    //     inputType: 'number'\n    // }\n]\n\nexport default FieldData;","const PackageData = [\n    {\n        label : \"Privart Mark\",\n        name: 'privartMark',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Weight\",\n        name: 'weight',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Quantity\",\n        name: 'quantity',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Item\",\n        name: 'item',\n        type: 'select',\n        inputType: 'text',\n        list: 'items'\n    },\n    {\n        label : \"Rate\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    }\n]\n\nexport default PackageData;","const BulkFieldData = [\n    {\n        label : \"Month\",\n        name: 'month',\n        type: 'input',\n        inputType: 'month'\n    },\n    {\n        label : \"Date\",\n        name: 'entrydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Consignment Number\",\n        name: 'consignmentNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Transporter\",\n        name: 'transporter',\n        type: 'select',\n        inputType: 'text',\n        list: 'transporters'\n    },\n    {\n        label : \"Supplier\",\n        name: 'supplier',\n        type: 'select',\n        inputType: 'text',\n        list: 'suppliers'\n    },\n    {\n        label : \"Godowns\",\n        name: 'godown',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    },\n    {\n        label : \"Bill Number\",\n        name: 'billNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Bill Date\",\n        name: 'billDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount Declared\",\n        name: 'amountDeclared',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"EWAY Bill No\",\n        name: 'ewaybillNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"MR Number\",\n        name: 'mrno',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"MR Date\",\n        name: 'mrdate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount\",\n        name: 'amount',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Delivery Date\",\n        name: 'deliverydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Number Of Package\",\n        name: 'numberOfPackage',\n        type: 'input',\n        inputType: 'number'\n    },\n]\n\nexport default BulkFieldData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row } from 'antd';\nimport FieldData from '../../data/FieldData';\nimport InputField from '../common/InputField';\nimport { createConsignment, getAllGodowns, getAllItems, getAllSuppliers, getAllTransporters, updateConsignment } from '../../api'; \nimport SelectField from '../common/SelectField';\n\nconst ConsignmentModal = ({ visible , setVisible , data, fetchConsignments}) => {\n\n    const initialData = FieldData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n    const [items, setItems] = useState([]);\n    const [fitems, setFItems] = useState([]);\n\n    const [suppliers, setSuppliers] = useState([]);\n    const [fsuppliers, setFSuppliers] = useState([]);\n\n    const [transporters, setTransporters] = useState([]);\n    const [ftransporters, setFTransporters] = useState([]);\n\n    const [godowns, setGodowns] = useState([]);\n    const [fgodowns, setFGodowns] = useState([]);\n    \n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n        fetchItems();\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateConsignment(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Success\", \"Succesfully updated consignments details\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createConsignment(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Success\" , \"Succesfully added consignments details\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await fetchConsignments();\n    }\n\n    const fetchItems = async () => {\n        const response = await getAllItems();\n\n        const items = response?.data?.entity;\n        setItems(items);\n        setFItems(items);\n\n        const responses = await getAllSuppliers();\n\n        const suppliers = responses?.data?.entity;\n        setSuppliers(suppliers);\n        setFSuppliers(suppliers);\n\n        const trresponses = await getAllTransporters();\n\n        const transporters = trresponses?.data?.entity;\n        setTransporters(transporters);\n        setFTransporters(transporters);\n\n        const godownResponse = await getAllGodowns();\n        setGodowns(godownResponse?.data?.entity);\n        setFGodowns(godownResponse?.data?.entity);\n    }\n\n    \n\n    const onSelectChange = (name, value) => {\n        setFormData({...formData,[name]: value});\n    }\n\n    const handleSearch = (field, value) => {\n        if (value) {\n            eval(`set${field.label}s`)([...eval(`f${field.list}`),{ name: value }]);\n        }\n        else {\n            eval(`set${field.label}s`)(eval(`f${field.list}`));\n        }\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Consignment`}\n            visible={visible}\n            width={\"85%\"}\n            style={{ top: 20 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n            <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                Cancel\n            </Button>,\n            <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                Save\n            </Button>,\n            <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                Save and Close\n            </Button>,\n            ]}\n        >\n            <div>\n                <Row>\n                    { \n                        FieldData.map((field) => field.type == 'input' ?\n                                <InputField \n                                    label={field.label}\n                                    type={field.inputType} \n                                    name={field.name}\n                                    onChange={onChange}\n                                    key={field.name}\n                                    value={formData ? formData[field.name] : ''}\n                                /> : \n                                <SelectField\n                                    label={field.label}\n                                    option={eval(field.list).map((item) => ({ value: item.name, text: item.name}))}\n                                    showSearch\n                                    optionFilterProp=\"children\"\n                                    value={formData ? formData[field.name] : ''}\n                                    showArrow={false}\n                                    onSearch={(value) => handleSearch(field,value)}\n                                    onChange={(value) => onSelectChange(field.name, value)}\n                                    filterOption={(input, option) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    filterSort={(optionA, optionB) =>\n                                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                    }\n                                    key={field.name}\n                                />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default ConsignmentModal;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Typography, Col } from 'antd';\nimport BulkFieldData from '../../data/BulkFieldData';\nimport InputField from '../common/InputField';\nimport { createBulkConsignment, createConsignment, getAllGodowns, getAllItems, getAllSuppliers, getAllTransporters, updateConsignment } from '../../api'; \nimport SelectField from '../common/SelectField';\nimport PackageComponent from '../common/PackageComponent';\nimport PackageData from '../../data/PackageData';\nconst { Title } = Typography;\n\nconst BulkConsignmentModal = ({ visible , setVisible ,data, fetchConsignments}) => {\n\n    const initialData = BulkFieldData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n    const [packageList, setPackageList] = useState([]);\n    const [items, setItems] = useState([]);\n    const [fitems, setFItems] = useState([]);\n\n    const [suppliers, setSuppliers] = useState([]);\n    const [fsuppliers, setFSuppliers] = useState([]);\n\n    const [transporters, setTransporters] = useState([]);\n    const [ftransporters, setFTransporters] = useState([]);\n\n    const [godowns, setGodowns] = useState([]);\n    const [fgodowns, setFGodowns] = useState([]);\n    \n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(initialData);\n        setPackageList([]);\n        fetchItems();\n    },[])\n\n    const onClose = () => {\n        setVisible(false);\n        setFormData(initialData);\n        setPackageList([]);\n    }\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n        console.log(packageList)\n\n        if(packageList.length == 0){\n            swal(\"Atleast 1 pacakge is needed\", \"validation\");\n            return;\n        }\n    \n        formData.packageList = packageList;\n        let response = await createBulkConsignment(formData);\n        console.log(response);\n        if(response?.data?.status == true){\n            swal(\"Success\" , \"Succesfully added all consignments details\");\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", \"error\");\n        }\n        \n\n        if(close) { \n            onClose();\n        }\n\n        await fetchConsignments();\n    }\n\n   \n\n    const fetchItems = async () => {\n        const response = await getAllItems();\n\n        const items = response?.data?.entity;\n        setItems(items);\n        setFItems(items);\n\n        const responses = await getAllSuppliers();\n\n        const suppliers = responses?.data?.entity;\n        setSuppliers(suppliers);\n        setFSuppliers(suppliers);\n\n        const trresponses = await getAllTransporters();\n\n        const transporters = trresponses?.data?.entity;\n        setTransporters(transporters);\n        setFTransporters(transporters);\n\n        const godownResponse = await getAllGodowns();\n        setGodowns(godownResponse?.data?.entity);\n        setFGodowns(godownResponse?.data?.entity);\n    }\n\n    \n\n    const onSelectChange = (name, value) => {\n        setFormData({...formData,[name]: value});\n    }\n\n    const handleSearch = (field, value) => {\n        if (value) {\n            eval(`set${field.label}s`)([...eval(`f${field.list}`),{ name: value }]);\n        }\n        else {\n            eval(`set${field.label}s`)(eval(`f${field.list}`));\n        }\n    }\n\n    const setPackageData = (index, data) => {\n        packageList[index] = data;\n        setPackageList(packageList);\n    }\n\n    const renderPackages = () => {\n\n        const renderList = [];\n\n\n        if(formData?.numberOfPackage && formData?.numberOfPackage !== ''){\n            const count = parseInt(formData.numberOfPackage)\n\n            if(count > 100 )  { \n                swal('Maximum 100 Packages allowed to insert in bulk', 'validation');\n                setFormData({...formData, numberOfPackage: count})\n            }\n            for(let i = 0 ; i < count && i < 100; i++){\n                renderList.push(\n                    <PackageComponent items={items} key={i} index={i} setPackageData={setPackageData} handleSearch={handleSearch}/>\n                )\n            }\n            \n        } \n       \n        \n\n        return renderList;\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Bulk Consignment`}\n            visible={visible}\n            width={\"85%\"}\n            style={{ top: 20 }}\n            onCancel={() => onClose()}\n            footer={[\n            <Button key=\"cancel\" onClick={() => onClose()}>\n                Cancel\n            </Button>,\n            <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                Save\n            </Button>,\n            <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                Save and Close\n            </Button>,\n            ]}\n        >\n            <div>\n                <Row>\n                    { \n                        BulkFieldData.map((field) => field.type == 'input' ?\n                                <InputField \n                                    label={field.label}\n                                    type={field.inputType} \n                                    name={field.name}\n                                    onChange={onChange}\n                                    key={field.name}\n                                    value={formData ? formData[field.name] : ''}\n                                /> : \n                                <SelectField\n                                    label={field.label}\n                                    option={eval(field.list).map((item) => ({ value: item.name, text: item.name}))}\n                                    showSearch\n                                    optionFilterProp=\"children\"\n                                    value={formData ? formData[field.name] : ''}\n                                    showArrow={false}\n                                    onSearch={(value) => handleSearch(field,value)}\n                                    onChange={(value) => onSelectChange(field.name, value)}\n                                    filterOption={(input, option) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    filterSort={(optionA, optionB) =>\n                                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                    }\n                                    key={field.name}\n                                />\n                        )\n                    }     \n                </Row>\n            </div>\n\n            <div id='packageDiv' className='ml-24'>\n                <Title level={3} className=\"home-title\">Packages</Title>\n                <div>\n                <Row>\n                    {\n                        PackageData.map((field,index) =>\n                        <Col span={field.name === 'item'? 8 : 3} key={index} className='border-4'>\n                            <h3 className='px-2 pt-2 text-lg font-bold'>{field.label}</h3>\n                        </Col>)\n                    }\n                \n                </Row>\n                { renderPackages() }\n                </div>\n               \n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default BulkConsignmentModal;","import { Col, Row, Select } from \"antd\";\nimport { useState } from \"react\";\nimport PackageData from \"../../data/PackageData\";\n\nconst PackageComponent = ({index, setPackageData, items , handleSearch }) => {\n\n    const initialData = PackageData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    \n    const onChange = (e) => {\n        let data = {...formData,[e.target.name]: e.target.value};\n        setFormData(data);\n        setPackageData(index, data)\n    }\n\n    const onSelectChange = (name, value) => {\n        let data = {...formData,[name]: value};\n        setFormData(data);\n        setPackageData(index, data);\n    }\n    \n\n    return (\n        <Row>\n            {\n                 PackageData.map((field) => field.type == 'input'?\n                    <Col span={3} className='border-4'>\n                        <input \n                            placeholder={field.label}\n                            type={field.inputType} \n                            name={field.name}\n                            onChange={onChange}\n                            key={field.name}\n                            value={formData ? formData[field.name] : ''}\n                            className=\"w-full py-2 px-2 mt-2\"\n                        />  \n                    </Col> : \n                    <Col span={8} className='border-4 p-2'>\n                        <Select \n                            className=\"w-full\" \n                            placeholder={field.label}\n                            showSearch\n                            optionFilterProp=\"children\"\n                            value={formData ? formData[field.name] : ''}\n                            showArrow={false}\n                            onSearch={(value) => handleSearch(field,value)}\n                            onChange={(value) => onSelectChange(field.name, value)}\n                            filterOption={(input, option) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            filterSort={(optionA, optionB) =>\n                                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                            }\n                            key={field.name}\n                            >\n                                { items.map((ele,index) => <Option value={ele.name} key={index}>{ele.name}</Option>) }\n                        </Select>\n                    </Col>  \n                )\n            }\n           \n        </Row>\n    )\n}\n\nexport default PackageComponent;","import axios from 'axios';\n\nconst url = `http://${window.location.hostname}:8000`;\n//const url = `http://ec2-3-111-57-30.ap-south-1.compute.amazonaws.com:8000`;\nconst API = axios.create({ baseURL : url});\n\nexport const getAllConsigment = (filter) => API.get(`/consigments?${filter ? `consignmentNo=${filter}` : \"\"}`);\nexport const createConsignment = (consigment) => API.post(\"/consigments\", consigment);\nexport const getConsignment  = (id) => API.get(`/consigments/${id}`);\nexport const updateConsignment = (id, updatedConsigment) => API.put(`/consigments/${id}`, updatedConsigment);\nexport const deleteConsignment= (id) => API.delete(`/consigments/${id}`);\n\nexport const createBulkConsignment = (consigment) => API.post(\"/consigments/bulk\", consigment);\n\nexport const changeConsignmentLocation = (id,data) => API.post(`/consigments/${id}/godowns`,data);\n\nexport const getAllGodowns = () => API.get(\"/godowns\");\nexport const createGodown = (godown) => API.post(\"/godowns\", godown);\nexport const updateGodown = (id,godown) => API.put(`/godowns/${id}`, godown);\nexport const deleteGodown = (id) => API.delete(`/godowns/${id}`);\n\nexport const getAllItems = () => API.get(\"/items\");\nexport const createItem = (item) => API.post(\"/items\", item);\nexport const updateItem = (id,item) => API.put(`/items/${id}`, item);\nexport const deleteItem = (id) => API.delete(`/items/${id}`);\n\nexport const getAllSuppliers = () => API.get(\"/suppliers\");\nexport const createSupplier = (supplier) => API.post(\"/suppliers\", supplier);\nexport const updateSupplier = (id,supplier) => API.put(`/suppliers/${id}`, supplier);\nexport const deleteSupplier = (id) => API.delete(`/suppliers/${id}`);\n\nexport const getAllTransporters = () => API.get(\"/transporters\");\nexport const getAllStats = () => API.get(\"/stats\");\n\nexport const getAllConsigmentWithFilter = (filter) => API.get(`/consigments?consignmentNo=${filter}`);\n\nexport const createChallan = (fromGodownId,toGodownId,consignments) => API.post(\"/challans\", { fromGodownId, consignments, toGodownId });\n\nexport const getFilterMetaData = () => API.get(\"/filter-data\");\nexport const filterConsignments = (filter) => API.post(\"/consigments/filter\", filter);\n\n\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport SelectField from '../common/SelectField';\nimport { getAllGodowns, changeConsignmentLocation, getConsignment } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\n\n\nconst LocationModal = ({ visible , setVisible , data, consigmentData, fetchConsignments}) => {\n\n    const initialData = {\n        consignmentId: '',\n        consignmentNo : '',\n        godownId: '',\n        godownValue: '',\n        date: moment().format(\"YYYY-MM-DDThh:mm\")\n    };\n\n    const [formData, setFormData] = useState(initialData);\n    const [godowns,setGodowns] = useState([]);\n    const [consigment,setConsigment] = useState(consigmentData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelect = (value) => {\n        setFormData({...formData,godownId: value});\n    }\n\n    const getGodowns = async () => {\n        const list = await getAllGodowns();\n        setGodowns(list?.data?.entity);\n    }\n\n    useEffect(() => {\n        getGodowns();\n        if(data){\n            setFormData(data);\n        }\n    },[data]);\n\n    useEffect(() => {\n        setConsigment(consigmentData);\n    },[consigmentData]);\n\n    const addLocation = async() => {\n        //console.log('change',consigmentData, formData);\n        const willDelete = await swal({\n            title: \"Are you sure?\",\n            text: \"Are you sure that you want to update the location ?\",\n            icon: \"warning\",\n            dangerMode: true,\n          });\n           \n          if (willDelete) {\n            const { godownId, date } = formData;\n            const response = await changeConsignmentLocation(consigmentData.id,{ godownId, date});\n            console.log(response);\n\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated consignment location\", \"success\");\n\n                const fetched = await getConsignment(consigmentData.id);\n            \n                console.log(fetched);\n\n                setFormData({...formData,godownId: ''});\n\n                setConsigment(fetched.data.entity);\n\n                await fetchConsignments()\n            }\n          }\n    }\n\n    const columns = [\n        {\n            title:  ( \n                <Typography.Text ellipsis={true} title={'Godown/Location'}>\n                    {'Godown/Location'}\n                </Typography.Text>\n            ),\n            dataIndex: 'location',\n            key: 'location',\n            width: '150px'\n        },\n        {\n            title:  ( \n                <Typography.Text ellipsis={true} title={'Date-Time'}>\n                    {'Date'}\n                </Typography.Text>\n            ),\n            dataIndex: 'date',\n            key: 'date',\n            width: '150px'\n        }\n    ]\n\n    let location = null\n    if(consigment?.godowns.length > 0){\n        location = consigment.godowns.map((value) => ({location: value.name, date: value.ConsigmentLocation.createdAt}));\n        location.sort((a,b) => {\n            return moment(b.date) - moment(a.date);\n        });\n        location = location.map((value) => ({...value, date: moment(value.date).format(\"DD MMM YYYY, hh:mm A\")}))\n    }\n\n\n    return (\n        <>\n        <Modal\n            title={`Track Consignment`}\n            visible={visible}\n            width={\"45%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n            <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                Close\n            </Button>\n            ]}\n        >\n            <div>\n                <Row>\n                    <SelectField \n                        label={\"Godown\"}\n                        name={\"location\"}\n                        onChange={onSelect}\n                        option={godowns.map((godown) => ({ value: godown.id, text: godown.name}))}\n                        value={formData.godownId}\n                    />\n                    {/*<InputField\n                        label={\"Date\"}\n                        type={'datetime-local'} \n                        name={'date'}\n                        onChange={onChange}\n                        value={formData.date}\n                        style={{display: 'none'}}\n                    />*/}\n                     <Col span={12} className=\"pb-3\">\n                        <Button className='float-right mt-4' type=\"primary\" onClick={() => addLocation()}> Update Current Location</Button>\n                    </Col>\n                </Row>\n               \n                <Row>\n                    <Col span={24}>\n                        <Table columns={columns} dataSource={location}/>\n                    </Col>\n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default LocationModal;","import { CopyOutlined, DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Table, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport FieldData from '../data/FieldData';\nimport ConsignmentModal from './modals/ConsignmentModal';\nimport LocationModal from \"./modals/LocationModal\";\nimport { createConsignment, deleteConsignment } from \"../api\";\nimport BulkConsignmentModal from \"./modals/BulkConsignmentModal\";\nconst { Title } = Typography;\nconst Consigments = ({ consigments , fetchConsignments, filterApplied}) => {\n\n    const [visibleCM, setVisibleCM] = useState(false);\n    const [editData, setEditData] = useState(null);\n    const [actionColumn,SetActionCol] = useState(true);\n    const [visibleLM, setVisibleLM] = useState(false);\n    const [editLData, setLEditData] = useState(null);\n    const [visibleBCM, setVisibleBCM] = useState(false);\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisibleCM(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisibleCM(true);\n    }\n\n    const onAddBulk = () => {\n        setEditData(null)\n        setVisibleBCM(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteConsignment(data.id);\n            await fetchConsignments();\n        } \n    }\n\n    const onCopy = async(data) => {\n        let response = await createConsignment(data);\n        console.log(response);\n        if(response?.data?.status == true){\n            swal(\"Success\" , \"Succesfully copied and created the consignment\");\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", \"error\");\n        }\n\n        await fetchConsignments();\n    }\n\n    const onChangeLocation = (data) => {\n        setEditData({...data})\n        setLEditData(null)\n        setVisibleLM(true);\n    }\n   \n    const uniqueMap = consigments && consigments.length > 0 ? consigments.reduce((previous, current) => {\n            for(let key in current){\n                if(!previous[key]){\n                    previous[key] = new Set();\n                }\n                previous[key].add(current[key]);\n            }\n\n            return previous;\n    },{}) : {};\n\n    const columns = FieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={false} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name + (new Date().getTime() + Math.random() * 10000),\n        width: '100px',\n        filters: uniqueMap[column.name] ? Array.from(uniqueMap[column.name]).map((value) => ({ text: value, value: value})) : [],\n        filterMode: 'tree',\n        filterSearch: true,\n        onFilter: (value, record) => record[column.name] ? record[column.name].startsWith(value) : false,\n    }));\n\n    if(actionColumn){\n        const actionCol = {\n            title: 'Action',\n            key: 'operation'  + (new Date().getTime() + Math.random() * 10000),\n            fixed: 'right',\n            width: 200,\n            render: (data) => {\n                return (\n                    <>\n                        <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                            <EditOutlined />\n                        </Button>\n                        \n                        <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                            <DeleteOutlined />\n                        </Button>\n    \n                        {/* <Button key={'location'+data.id} type=\"secondary\" onClick={() => onChangeLocation(data)} className=\"ml-2\" title=\"Delete\">\n                            <HeatMapOutlined />\n                        </Button> */}\n\n                        <Button key={'copy'+data.id} type=\"dashed\" onClick={() => onCopy(data)} className=\"ml-2\" title=\"Copy\">\n                            <CopyOutlined />\n                        </Button>\n                        \n                    </>\n                );\n            },\n        };\n    \n        columns.push(actionCol);\n    }\n    const searchValue = document.getElementById('searchByConNo')?.value;\n\n    return (\n        <>\n         <div className=\"home-heading-container\">\n            <Title level={2} className=\"home-title\">Consignments</Title>\n            <div>{filterApplied ? `(Filter Applied)` : (searchValue != '' ? ` (Search results - \"${searchValue}\")` : '')}</div>\n            <Title level={3} className=\"show-more\">\n                <Button className=\"mr-4\" onClick={() => onAddBulk()}><PlusSquareOutlined />Add Bulk Consigments</Button>\n                <a className=\"text-sm mr-4\" onClick={() => SetActionCol(!actionColumn)}>Action</a>\n                <Button onClick={() => onAdd()}><PlusSquareOutlined />Add Consigments</Button>\n            </Title>\n        </div>\n        <Row className=\"w-full\">\n            <Col span={24}>\n                <Table\n                    dataSource={consigments ? consigments.map((con,index) => ({ ...con,key: index + (new Date().getTime() + Math.random() * 10000)})) : null } \n                    columns={columns}\n                    bordered\n                    scroll={{ x: 1600 }}\n                    pagination={ {pageSize: 10}}\n                    rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                />\n            </Col>\n        </Row>\n        <BulkConsignmentModal visible={visibleBCM} setVisible={setVisibleBCM} fetchConsignments={fetchConsignments} />\n        <ConsignmentModal visible={visibleCM} setVisible={setVisibleCM} data={editData} fetchConsignments={fetchConsignments} />\n        <LocationModal visible={visibleLM} setVisible={setVisibleLM} data={editLData} consigmentData = {editData} fetchConsignments={fetchConsignments}/>\n        </>\n    )\n}\n\nexport default Consigments;","const GodownData = [\n    {\n        label : \"Godown Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Address\",\n        name: 'address',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default GodownData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createGodown, updateGodown } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport GodownData from '../../data/GodownData';\n\n\nconst GodownModal = ({ visible , setVisible , data , callback}) => {\n\n    const initialData = GodownData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateGodown(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated godown details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createGodown(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added godown details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Godown`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n                <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                    Cancel\n                </Button>,\n                <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                    Save\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save and Close\n                </Button>,\n                ]}\n        >\n            <div>\n                <Row>\n                    { \n                        GodownData.map((field) =>\n                            <InputField \n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                                lcol = {6}\n                                icol = {18}\n                            />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default GodownModal;","import { DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nimport { deleteGodown, getAllGodowns } from \"../api\";\nimport GodownData from \"../data/GodownData\";\nimport GodownModal from \"./modals/GodownModal\";\nconst { Title } = Typography;\nconst Godowns = ({ refresh }) => {\n\n    const [godowns, setGodowns] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [editData, setEditData] = useState(null);\n\n    const fetchGodowns = async () => {\n        const response = await getAllGodowns();\n        setGodowns(response?.data?.entity);\n    }\n\n    useEffect(() => {\n        fetchGodowns();\n    },[]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisible(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisible(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteGodown(data.id);\n            fetchGodowns();\n            refresh();\n        } \n    }\n\n    const fieldData = GodownData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    return (\n        <>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Godowns</Title>\n                <Title level={3} className=\"show-more\"><Button onClick={() => onAdd()}><PlusSquareOutlined />Add Godowns</Button></Title>\n            </div>\n            <Row className=\"w-full\">\n                <Col span={24}>\n                    <Table\n                        dataSource={godowns} \n                        columns={columns}\n                        bordered\n                        pagination={ {pageSize: 10}}\n                        rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                    />\n                </Col>\n            </Row> \n            <GodownModal visible={visible} setVisible={setVisible} data={editData} callback={fetchGodowns}/>       \n        </>\n    );\n}\n\nexport default Godowns;\n\n","const ItemData = [\n    {\n        label : \"Item Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default ItemData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createItem, updateItem } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport ItemData from '../../data/ItemData';\n\n\nconst ItemModal = ({ visible , setVisible , data , callback}) => {\n\n    const initialData = ItemData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateItem(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated item details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createItem(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added item details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Item`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n                <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                    Cancel\n                </Button>,\n                <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                    Save\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save and Close\n                </Button>,\n                ]}\n        >\n            <div>\n                <Row>\n                    { \n                        ItemData.map((field) =>\n                            <InputField \n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                                lcol = {6}\n                                icol = {18}\n                            />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default ItemModal;","import { DeleteOutlined, EditOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nimport { deleteItem, getAllItems } from \"../api\";\nimport ItemData from \"../data/ItemData\";\nimport ItemModal from \"./modals/ItemModal\";\nconst { Title } = Typography;\nconst Items = ({ }) => {\n\n    const [items, setItems] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [editData, setEditData] = useState(null);\n\n    const fetchItems = async () => {\n        const response = await getAllItems();\n        setItems(response?.data?.entity);\n    }\n\n    useEffect(() => {\n        fetchItems();\n    },[]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisible(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisible(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteItem(data.id);\n            fetchItems();\n            refresh();\n        } \n    }\n\n    const fieldData = ItemData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    return (\n        <>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Items</Title>\n                <Title level={3} className=\"show-more\"><Button onClick={() => onAdd()}><PlusSquareOutlined />Add Item</Button></Title>\n            </div>\n            <Row className=\"w-full\">\n                <Col span={24}>\n                    <Table\n                        dataSource={items}\n                        columns={columns}\n                        bordered\n                        pagination={ {pageSize: 10}}\n                    />\n                </Col>\n            </Row> \n            <ItemModal visible={visible} setVisible={setVisible} data={editData} callback={fetchItems}/>       \n        </>\n    );\n}\n\nexport default Items;\n\n","const SupplierData = [\n    {\n        label : \"Supplier Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n];\n\nexport default SupplierData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createSupplier, updateSupplier } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport SupplierData from '../../data/SupplierData';\n\n\nconst SupplierModal = ({ visible , setVisible , data , callback}) => {\n\n    const initialData = SupplierData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateSupplier(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated supplier details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createSupplier(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added supplier details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Supplier`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n                <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                    Cancel\n                </Button>,\n                <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                    Save\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save and Close\n                </Button>,\n                ]}\n        >\n            <div>\n                <Row>\n                    { \n                        SupplierData.map((field) =>\n                            <InputField \n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                                lcol = {6}\n                                icol = {18}\n                            />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default SupplierModal;","import { DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nimport { deleteSupplier, getAllSuppliers } from \"../api\";\nimport SupplierData from \"../data/SupplierData\";\nimport SupplierModal from \"./modals/SupplierModal\";\nconst { Title } = Typography;\nconst Suppliers = ({ refresh }) => {\n\n    const [suppliers, setSuppliers] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [editData, setEditData] = useState(null);\n\n    const fetchSuppliers = async () => {\n        const response = await getAllSuppliers();\n        setSuppliers(response?.data?.entity);\n    }\n\n    useEffect(() => {\n        fetchSuppliers();\n    },[]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisible(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisible(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteSupplier(data.id);\n            fetchSuppliers();\n            refresh();\n        } \n    }\n\n    const fieldData = SupplierData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    return (\n        <>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Suppliers</Title>\n                <Title level={3} className=\"show-more\"><Button onClick={() => onAdd()}><PlusSquareOutlined />Add Suppliers</Button></Title>\n            </div>\n            <Row className=\"w-full\">\n                <Col span={24}>\n                    <Table\n                        dataSource={suppliers} \n                        columns={columns}\n                        bordered\n                        pagination={ {pageSize: 10}}\n                        rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                    />\n                </Col>\n            </Row> \n            <SupplierModal visible={visible} setVisible={setVisible} data={editData} callback={fetchSuppliers}/>       \n        </>\n    );\n}\n\nexport default Suppliers;\n\n","import { CopyOutlined, DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Select, Table, Typography, DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { filterConsignments, getFilterMetaData } from \"../api\";\nconst { Title } = Typography;\nconst { RangePicker } = DatePicker;\nconst Filter = ({ filterCallback, fetchConsignments }) => {\n\n    const [filter, setFilter] = useState({\n        consignments: [],\n        items: [],\n        suppliers: [],\n        transporters: [],\n        privateMarks: [],\n        godowns: []\n    });\n\n    const [selectedFilter, setSelectedFilter] = useState({\n        consignmentNo: [],\n        transporter: [],\n        supplier:[],\n        item:[],\n        privateMark: [],\n        fromDate: null,\n        toDate: null,\n        month: null\n    })\n\n    useEffect(async () => {\n        const filter = await getFilterMetaData();\n\n        setFilter(filter?.data?.entity);\n    }, []);\n\n    const handleChange = (value, name) => {\n        setSelectedFilter({...selectedFilter, [name]: value})\n    }\n\n    const onRangeChange = (value) => {\n        setSelectedFilter({...selectedFilter, fromDate: value[0], toDate: value[1]})\n    }\n\n    const onMonthChange = (value) => {\n        setSelectedFilter({...selectedFilter, month: value})\n    }\n\n    const applyFilter = async () => {\n        const { fromDate, toDate, month } = selectedFilter;\n        const filterBody = { \n            ...selectedFilter,\n            fromDate: fromDate ? fromDate.toDate(): null,\n            toDate: toDate ? toDate.toDate(): null,\n            month: month ? month.toDate(): null,\n        }\n        const filterResponse = await filterConsignments(filterBody);\n        filterCallback(filterResponse)\n    }\n\n    const resetFilter = async () => {\n        setSelectedFilter({\n            consignmentNo: [],\n            transporter: [],\n            supplier:[],\n            item:[],\n            privateMark: [],\n            fromDate: null,\n            toDate: null,\n            month: null\n        })\n        await fetchConsignments();\n    }\n\n    const getOptions = (list) => list.map((option, index) => <Option key={index} value={option.value}>{option.value}</Option>);\n\n    const filterConfig = [\n        {\n            label: 'Consigments No.',\n            list: 'consignments',\n            name: 'consignmentNo'\n        },\n        {\n            label: 'Private Mark',\n            list: 'privateMarks',\n            name: 'privateMark'\n        },\n        {\n            label: 'Item',\n            list: 'items',\n            name: 'item'\n        },\n        {\n            label: 'Supplier',\n            list: 'suppliers',\n            name: 'supplier'\n        },\n        {\n            label: 'Transporter',\n            list: 'transporters',\n            name: 'transporter'\n        },\n        {\n            label: 'Godowns',\n            list: 'godowns',\n            name: 'godown'\n        }\n    ]\n\n    return (\n        <div className=\"border-2 p-5\">\n            <Title level={4} className=\"heading\" id='mainheader'>Advanced Filter</Title>\n            <Row>\n                {\n                    filterConfig.map((config) =>\n                        <Col span={4} className='mr-4'>\n                            <label>{config.label}</label>\n                            <Select \n                                mode=\"multiple\"\n                                allowClear\n                                style={{ width: '100%'}}\n                                placeholder=\"Please select \"\n                                onChange={(value) => handleChange(value, config.name)}\n                                value={selectedFilter[config.name]}\n                            >\n                                { getOptions(filter[config.list]) }\n                            </Select>\n                        </Col>  \n                    )\n                        \n                }\n               \n\n                <Col span={4} className='mr-4'>\n                    <label>Date Range</label>\n                    <RangePicker\n                        dateRender={(current) => {\n                            const style = {};\n\n                            if (current.date() === 1) {\n                                style.border = '1px solid #1890ff';\n                                style.borderRadius = '50%';\n                            }\n\n                            return (\n                                <div className=\"ant-picker-cell-inner\" style={style}>\n                                    {current.date()}\n                                </div>\n                            );\n                        }}\n                        onChange={onRangeChange}\n                        value= { [selectedFilter.fromDate , selectedFilter.toDate ]} \n                        />\n                </Col>\n\n                <Col span={4} className='mr-4'>\n                    <label>Month</label><br></br>\n                    <DatePicker picker=\"month\"  onChange={onMonthChange} value={ selectedFilter.month }/>\n                </Col>\n\n                <Col span={4} className='mr-4'>\n                    <div className=\"mt-5\">\n                        <Button type=\"primary\" className=\"mr-3\" onClick={() => applyFilter()}>\n                            Apply Filter\n                        </Button>\n                        <Button key=\"cancel\" onClick={() => resetFilter(false)}>\n                            Reset Filter\n                        </Button>   \n                    </div>\n                    \n                     \n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Filter;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { getAllConsigment, getAllStats, getAllConsigmentWithFilter } from '../api/index.js';\nimport Consigments from './Consignments.js';\nimport Godowns from './Godowns.js';\nimport Items from './Items.js';\nimport Suppliers from './Suppliers.js';\nimport InputField from './common/InputField.js';\nimport Filter from './Filter.js';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n\n  const [consigments, setConsignments] = useState([]);\n  const [globalStats, setStats] = useState({\n      itemCount: 0,\n      consignmentCount: 0,\n      packageCount: 0,\n      supplierCount: 0,\n      godownCount: 0\n  });\n  const [filterApplied, setFilterApplied ] = useState(false);\n  useEffect(() => {\n    fetchConsignments();\n  },[]);\n\n  const fetchConsignments = async () => {\n    setFilterApplied(false);\n    const sValue = document.getElementById('searchByConNo').value;\n\n    const response = await getAllConsigment(sValue);\n    console.log(response)\n    setConsignments(response?.data?.entity);\n\n    const statsResponse = await getAllStats();\n    console.log(statsResponse)\n    setStats(statsResponse?.data?.entity);\n    \n  }\n\n  const filterCallback = (response) => {\n    setConsignments(response?.data?.entity);\n    setFilterApplied(true);\n  }\n\n  const serachConsignment = async (value) => {\n    await fetchConsignments();\n  }\n\n  const handleKeyPress = async (event) => {\n    if(event.key === 'Enter'){\n      await fetchConsignments();\n    }\n  }\n\n\n  return (\n    <>\n      <Title level={2} className=\"heading\" id='mainheader'>Stock Management Stats</Title>\n      <Row gutter={[32, 32]}>\n            <Col span={12}><Statistic title=\"Total Consigments\" value={globalStats?.consignmentCount ? globalStats.consignmentCount : 0 }/></Col>\n            <Col span={12}><Statistic title=\"Total Packages\" value={millify(globalStats?.packageCount ? globalStats.packageCount : 0)}/></Col>\n            <Col span={12}><Statistic title=\"Total Items\" value={millify(globalStats?.itemCount? globalStats.itemCount : 0)}/></Col>\n            <Col span={12}><Statistic title=\"Total Godowns\" value={millify(globalStats?.godownCount ? globalStats.godownCount : 0)}/></Col>\n            <Col span={12}><Statistic title=\"Total Suppliers\" value={millify(globalStats?.supplierCount ? globalStats.supplierCount : 0)}/></Col>\n      </Row>\n      \n      <Row id='searchContainer'>\n        <InputField\n              label={'Search'}\n              placeholder={'consignment no, transporter, supplier, item, bill no, mr no,godown'}\n              type=\"text\"\n              name=\"searchByConNo\"\n              id=\"searchByConNo\"\n              onKeyPress={handleKeyPress}\n              icol={10}\n          />\n          <Col span={4}>\n                <Button type=\"primary\" className='mt-3 ml-4' onClick={(event) => serachConsignment(event.target.value)} title=\"Search\" >\n                    <SearchOutlined /> Search\n                </Button>\n          </Col>\n      </Row>\n      <Filter filterCallback={filterCallback} fetchConsignments={fetchConsignments}/>\n\n      <div id='consignments'>\n        <Consigments consigments={ consigments } fetchConsignments={fetchConsignments} filterApplied={filterApplied}/>\n      </div>\n      \n      <div id='godowns'>\n        <Godowns refresh={fetchConsignments} />\n      </div>\n      <div id='items'>\n        <Items refresh={fetchConsignments} />\n      </div>\n      <div id='suppliers'>\n        <Suppliers refresh={fetchConsignments} />\n      </div>\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar, Row, Col, Affix } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  const linkClick = (id) => {\n    var divElement = document.getElementById(id);\n    window.scroll({\n      top: divElement.offsetTop - 100//divElement.offsetHeight,//scroll to the bottom of the element\n      //behavior: 'smooth' //auto, smooth, initial, inherit\n    });\n  }\n\n  return (\n    <Affix offsetTop={0} id=''>\n        <Row className='bg-regal-blue p-2 pb-0'>\n          <Col span={3}>\n            <div className='flex w-full items-center'>\n              <Avatar src={icon} size=\"large\" />\n              <Typography.Title level={1} className=\"ml-2 mt-2\"><Link to=\"/\">SMA</Link></Typography.Title>\n              <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n            </div>\n            \n          </Col>    \n          <Col span={21}>\n          <div className='w-full bg-regal-blue'>\n            <Menu theme=\"dark\" mode=\"horizontal\" >\n              <Menu.Item icon={<HomeOutlined />} key={'home'}>\n                <Link to=\"/\" onClick={() => linkClick('mainheader')}>Home</Link>\n              </Menu.Item>\n              <Menu.Item icon={<FundOutlined />}  key={'Consignments'}>\n                <Link to=\"/#consignments\" onClick={() => linkClick('consignments')}>Consignments</Link>\n              </Menu.Item>\n              <Menu.Item icon={<MoneyCollectOutlined />}  key={'Godowns'}>\n                <Link to=\"/#godowns\" onClick={() => linkClick('godowns')}>Godowns</Link>\n              </Menu.Item>\n              <Menu.Item icon={<BulbOutlined />}  key={'Items'}>\n                <Link to=\"/#items\" onClick={() => linkClick('items')}>Items</Link>\n              </Menu.Item>\n            </Menu>\n            </div>\n      </Col>\n      \n    </Row>\n    </Affix>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Homepage, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div>\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      \n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { Col, Row } from \"antd\";\n\nconst InputField = ({label , lcol , icol, placeholder, ...inputProps }) => {\n    return (\n        <>\n            \n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol ? icol : 8} className=\"mb-3\">\n                    <input {...inputProps} placeholder={placeholder? placeholder : label} className=\"w-full py-2 px-2 mt-2 border-2\"/>\n                </Col>\n            \n            \n        </>\n    )\n}\n\nexport default InputField;","import { Col, Row, Select } from \"antd\";\nconst { Option } = Select;\n\nconst SelectField = ({label, option, selected, ...property}) => {\n    return (\n        <>\n                <Col span={4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={8} className=\"mb-3\">\n                    <div className=\"mt-5\">\n                        <Select className=\"w-full\" placeholder={label} {...property}>\n                            { option.map((ele,index) => <Option value={ele.value} key={index}>{ele.text}</Option>) }\n                        </Select>\n                    </div>\n                </Col> \n        </>\n    )\n}\n\nexport default SelectField"],"sourceRoot":""}
{"version":3,"sources":["data/PackageData.js","data/FieldData.js","components/Filter.js","data/BulkFieldData.js","data/ChallanData.js","components/modals/ConsignmentModal.js","components/modals/BulkConsignmentModal.js","components/modals/ChallanModal.js","data/ConChallanData.js","api/index.js","data/PackageItemData.js","components/common/PackageComponent.js","data/ChallanDataAlt.js","components/modals/LocationModal.js","components/Consignments.js","data/GodownData.js","components/modals/GodownModal.js","components/Godowns.js","data/ItemData.js","components/modals/ItemModal.js","components/Items.js","data/SupplierData.js","components/modals/SupplierModal.js","components/Suppliers.js","components/Challans.js","components/Homepage.js","images/cryptocurrency.png","components/Navbar.js","App.js","index.js","components/common/InputField.js","components/common/SelectField.js"],"names":["PackageData","label","name","type","inputType","list","FieldData","Title","Typography","RangePicker","DatePicker","Filter","filterCallback","fetchConsignments","useState","consignments","items","suppliers","transporters","privateMarks","godowns","filter","setFilter","consignmentNo","transporter","supplier","item","privateMark","fromDate","toDate","month","godown","selectedFilter","setSelectedFilter","useEffect","a","getFilterMetaData","data","entity","applyFilter","filterBody","filterConsignments","filterResponse","resetFilter","className","level","id","map","config","span","mode","allowClear","style","width","placeholder","onChange","value","handleChange","option","index","Option","dateRender","current","date","border","borderRadius","picker","onClick","BulkFieldData","ChallanData","ConsignmentModal","visible","setVisible","initialData","reduce","previous","field","formData","setFormData","setItems","fitems","setFItems","setSuppliers","fsuppliers","setFSuppliers","setTransporters","ftransporters","setFTransporters","setGodowns","fgodowns","setFGodowns","e","target","fetchItems","onSubmit","close","console","log","updateConsignment","response","status","swal","createConsignment","getAllItems","getAllSuppliers","responses","getAllTransporters","trresponses","getAllGodowns","godownResponse","onSelectChange","handleSearch","eval","title","top","onCancel","footer","text","showSearch","optionFilterProp","showArrow","onSearch","filterOption","input","children","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","BulkConsignmentModal","packageList","setPackageList","onClose","length","createBulkConsignment","setPackageData","renderPackages","renderList","numberOfPackage","count","parseInt","i","push","TabPane","Tabs","ChallanModal","callback","selectedRowKeys","selectedRows","consigments","setConsignments","getGodowns","clearData","setEditData","challanConsignments","obj","consignmentId","editData","fromGodownId","godownId","toGodownId","getConsignmentsForChallan","getConsignmentObject","fromGodown","find","toGodown","createChallan","challan","number","con","privartMark","rate","key","Date","getTime","Math","random","manual","getConsignmentsForLocation","consi","findIndex","cc","uniqueMap","Set","add","columns","ConChallanData","column","Text","ellipsis","dataIndex","rowSelection","onRemove","row","splice","onTabChange","removeCol","fixed","render","defaultActiveKey","tab","dataSource","bordered","pagination","rowKey","record","url","window","location","hostname","API","axios","create","baseURL","getAllConsigment","get","consigment","post","updatedConsigment","put","deleteConsignment","delete","createGodown","updateGodown","deleteGodown","createItem","updateItem","deleteItem","createSupplier","updateSupplier","deleteSupplier","getAllStats","getAllChallans","getChallansForConsignments","challanId","PackageItemData","PackageComponent","itemsList","setItemData","onRemoveMoreItems","ele","onAddMoreitems","PlusSquareOutlined","ItemComponent","v","MinusSquareOutlined","LocationModal","consigmentData","challans","setChallans","getChallansWithConsignmentId","datas","Consigments","filterApplied","visibleCM","setVisibleCM","actionColumn","SetActionCol","visibleLM","setVisibleLM","visibleBCM","setVisibleBCM","onDelete","confirm","onCopy","filters","Array","from","filterMode","filterSearch","onFilter","startsWith","actionCol","onEdit","EditOutlined","DeleteOutlined","onChangeLocation","HeatMapOutlined","CopyOutlined","searchValue","document","getElementById","getGodownName","godownName","scroll","x","GodownData","GodownModal","InputField","lcol","icol","Godowns","refresh","fetchGodowns","ItemData","ItemModal","Items","SupplierData","SupplierModal","Suppliers","fetchSuppliers","Challans","fetchChallans","ReadOutlined","Homepage","itemCount","consignmentCount","packageCount","supplierCount","godownCount","globalStats","setStats","setFilterApplied","sValue","statsResponse","serachConsignment","handleKeyPress","event","gutter","millify","onKeyPress","SearchOutlined","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","innerWidth","addEventListener","removeEventListener","linkClick","divElement","offsetTop","src","icon","size","to","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","App","exact","path","ReactDOM","StrictMode","inputProps","Select","SelectField","property","selected"],"mappings":"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","file":"static/js/main.593fbd7a.chunk.js","sourcesContent":["const PackageData = [\n    {\n        label : \"Private Mark\",\n        name: 'privartMark',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Weight\",\n        name: 'weight',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Quantity\",\n        name: 'quantity',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Item\",\n        name: 'item',\n        type: 'select',\n        inputType: 'text',\n        list: 'items'\n    },\n    {\n        label : \"Rate\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    }\n]\n\nexport default PackageData;","const FieldData = [\n    {\n        label : \"Month\",\n        name: 'month',\n        type: 'input',\n        inputType: 'month'\n    },\n    {\n        label : \"Date\",\n        name: 'entrydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Consignment Number\",\n        name: 'consignmentNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Transporter\",\n        name: 'transporter',\n        type: 'select',\n        inputType: 'text',\n        list: 'transporters'\n    },\n    {\n        label : \"Supplier\",\n        name: 'supplier',\n        type: 'select',\n        inputType: 'text',\n        list: 'suppliers'\n    },\n    {\n        label : \"Godown\",\n        name: 'godown',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    },\n    {\n        label : \"Private Mark\",\n        name: 'privartMark',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Number Of Package\",\n        name: 'numberOfPackage',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Weight\",\n        name: 'weight',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Quantity\",\n        name: 'quantity',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Item\",\n        name: 'item',\n        type: 'select',\n        inputType: 'text',\n        list: 'items'\n    },\n    {\n        label : \"Bill Number\",\n        name: 'billNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Bill Date\",\n        name: 'billDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount Declared\",\n        name: 'amountDeclared',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Rate\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"EWAY Bill No\",\n        name: 'ewaybillNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"MR Number\",\n        name: 'mrno',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"MR Date\",\n        name: 'mrdate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount\",\n        name: 'amount',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Delivery Date\",\n        name: 'deliverydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    // {\n    //     label : \"Challan Number\",\n    //     name: 'challanNumber',\n    //     type: 'input',\n    //     inputType: 'number'\n    // }\n]\n\nexport default FieldData;","import { CopyOutlined, DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Select, Table, Typography, DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { filterConsignments, getFilterMetaData } from \"../api\";\nconst { Title } = Typography;\nconst { RangePicker } = DatePicker;\nconst Filter = ({ filterCallback, fetchConsignments }) => {\n\n    const [filter, setFilter] = useState({\n        consignments: [],\n        items: [],\n        suppliers: [],\n        transporters: [],\n        privateMarks: [],\n        godowns: []\n    });\n\n    const [selectedFilter, setSelectedFilter] = useState({\n        consignmentNo: [],\n        transporter: [],\n        supplier:[],\n        item:[],\n        privateMark: [],\n        fromDate: null,\n        toDate: null,\n        month: null,\n        godown: []\n    })\n\n    useEffect(async () => {\n        const filter = await getFilterMetaData();\n\n        setFilter(filter?.data?.entity);\n    }, []);\n\n    const handleChange = (value, name) => {\n        setSelectedFilter({...selectedFilter, [name]: value})\n    }\n\n    const onRangeChange = (value) => {\n        setSelectedFilter({...selectedFilter, fromDate: value[0], toDate: value[1]})\n    }\n\n    const onMonthChange = (value) => {\n        setSelectedFilter({...selectedFilter, month: value})\n    }\n\n    const applyFilter = async () => {\n        const { fromDate, toDate, month } = selectedFilter;\n        const filterBody = { \n            ...selectedFilter,\n            fromDate: fromDate ? fromDate.toDate(): null,\n            toDate: toDate ? toDate.toDate(): null,\n            month: month ? month.toDate(): null,\n        }\n        const filterResponse = await filterConsignments(filterBody);\n        filterCallback(filterResponse)\n    }\n\n    const resetFilter = async () => {\n        setSelectedFilter({\n            consignmentNo: [],\n            transporter: [],\n            supplier:[],\n            item:[],\n            privateMark: [],\n            fromDate: null,\n            toDate: null,\n            month: null\n        })\n        await fetchConsignments();\n    }\n\n    const getOptions = (list) => list.map((option, index) => <Option key={index} value={option.value}>{option.value}</Option>);\n\n    const filterConfig = [\n        {\n            label: 'Consigments No.',\n            list: 'consignments',\n            name: 'consignmentNo'\n        },\n        {\n            label: 'Private Mark',\n            list: 'privateMarks',\n            name: 'privateMark'\n        },\n        {\n            label: 'Item',\n            list: 'items',\n            name: 'item'\n        },\n        {\n            label: 'Supplier',\n            list: 'suppliers',\n            name: 'supplier'\n        },\n        {\n            label: 'Transporter',\n            list: 'transporters',\n            name: 'transporter'\n        },\n        {\n            label: 'Godowns',\n            list: 'godowns',\n            name: 'godown'\n        }\n    ]\n\n    return (\n        <div className=\"border-2 p-5\">\n            <Title level={4} className=\"heading\" id='mainheader'>Advanced Filter</Title>\n            <Row>\n                {\n                    filterConfig.map((config) =>\n                        <Col span={4} className='mr-4'>\n                            <label>{config.label}</label>\n                            <Select \n                                mode=\"multiple\"\n                                allowClear\n                                style={{ width: '100%'}}\n                                placeholder=\"Please select \"\n                                onChange={(value) => handleChange(value, config.name)}\n                                value={selectedFilter[config.name]}\n                            >\n                                { getOptions(filter[config.list]) }\n                            </Select>\n                        </Col>  \n                    )\n                        \n                }\n               \n\n                <Col span={4} className='mr-4'>\n                    <label>Date Range</label>\n                    <RangePicker\n                        dateRender={(current) => {\n                            const style = {};\n\n                            if (current.date() === 1) {\n                                style.border = '1px solid #1890ff';\n                                style.borderRadius = '50%';\n                            }\n\n                            return (\n                                <div className=\"ant-picker-cell-inner\" style={style}>\n                                    {current.date()}\n                                </div>\n                            );\n                        }}\n                        onChange={onRangeChange}\n                        value= { [selectedFilter.fromDate , selectedFilter.toDate ]} \n                        />\n                </Col>\n\n                <Col span={4} className='mr-4'>\n                    <label>Month</label><br></br>\n                    <DatePicker picker=\"month\"  onChange={onMonthChange} value={ selectedFilter.month }/>\n                </Col>\n\n                <Col span={4} className='mr-4'>\n                    <div className=\"mt-5\">\n                        <Button type=\"primary\" className=\"mr-3\" onClick={() => applyFilter()}>\n                            Apply Filter\n                        </Button>\n                        <Button key=\"cancel\" onClick={() => resetFilter(false)}>\n                            Reset Filter\n                        </Button>   \n                    </div>\n                    \n                     \n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Filter;\n","const BulkFieldData = [\n    {\n        label : \"Month\",\n        name: 'month',\n        type: 'input',\n        inputType: 'month'\n    },\n    {\n        label : \"Date\",\n        name: 'entrydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Consignment Number\",\n        name: 'consignmentNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Transporter\",\n        name: 'transporter',\n        type: 'select',\n        inputType: 'text',\n        list: 'transporters'\n    },\n    {\n        label : \"Supplier\",\n        name: 'supplier',\n        type: 'select',\n        inputType: 'text',\n        list: 'suppliers'\n    },\n    {\n        label : \"Godown\",\n        name: 'godown',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    },\n    {\n        label : \"Bill Number\",\n        name: 'billNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Bill Date\",\n        name: 'billDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount Declared\",\n        name: 'amountDeclared',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"EWAY Bill No\",\n        name: 'ewaybillNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"MR Number\",\n        name: 'mrno',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"MR Date\",\n        name: 'mrdate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Amount\",\n        name: 'amount',\n        type: 'input',\n        inputType: 'number'\n    },\n    {\n        label : \"Delivery Date\",\n        name: 'deliverydate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Number Of Package\",\n        name: 'numberOfPackage',\n        type: 'input',\n        inputType: 'number'\n    },\n]\n\nexport default BulkFieldData;","const ChallanData = [\n    {\n        label : \"Source Godown\",\n        name: 'fromGodownId',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    },\n    {\n        label : \"Destination Godown\",\n        name: 'toGodownId',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    }\n];\n\nexport default ChallanData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row } from 'antd';\nimport FieldData from '../../data/FieldData';\nimport InputField from '../common/InputField';\nimport { createConsignment, getAllGodowns, getAllItems, getAllSuppliers, getAllTransporters, updateConsignment } from '../../api'; \nimport SelectField from '../common/SelectField';\n\nconst ConsignmentModal = ({ visible , setVisible , data, fetchConsignments}) => {\n\n    const initialData = FieldData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n    const [items, setItems] = useState([]);\n    const [fitems, setFItems] = useState([]);\n\n    const [suppliers, setSuppliers] = useState([]);\n    const [fsuppliers, setFSuppliers] = useState([]);\n\n    const [transporters, setTransporters] = useState([]);\n    const [ftransporters, setFTransporters] = useState([]);\n\n    const [godowns, setGodowns] = useState([]);\n    const [fgodowns, setFGodowns] = useState([]);\n    \n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n        fetchItems();\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateConsignment(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Success\", \"Succesfully updated consignments details\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createConsignment(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Success\" , \"Succesfully added consignments details\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await fetchConsignments();\n    }\n\n    const fetchItems = async () => {\n        const response = await getAllItems();\n\n        const items = response?.data?.entity;\n        setItems(items);\n        setFItems(items);\n\n        const responses = await getAllSuppliers();\n\n        const suppliers = responses?.data?.entity;\n        setSuppliers(suppliers);\n        setFSuppliers(suppliers);\n\n        const trresponses = await getAllTransporters();\n\n        const transporters = trresponses?.data?.entity;\n        setTransporters(transporters);\n        setFTransporters(transporters);\n\n        const godownResponse = await getAllGodowns();\n        setGodowns(godownResponse?.data?.entity);\n        setFGodowns(godownResponse?.data?.entity);\n    }\n\n    \n\n    const onSelectChange = (name, value) => {\n        setFormData({...formData,[name]: value});\n    }\n\n    const handleSearch = (field, value) => {\n        if (value) {\n            eval(`set${field.label}s`)([...eval(`f${field.list}`),{ name: value }]);\n        }\n        else {\n            eval(`set${field.label}s`)(eval(`f${field.list}`));\n        }\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Consignment`}\n            visible={visible}\n            width={\"85%\"}\n            style={{ top: 20 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n            <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                Cancel\n            </Button>,\n            <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                Save\n            </Button>,\n            <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                Save and Close\n            </Button>,\n            ]}\n        >\n            <div>\n                <Row>\n                    { \n                        FieldData.map((field) => field.type == 'input' ?\n                                <InputField \n                                    label={field.label}\n                                    type={field.inputType} \n                                    name={field.name}\n                                    onChange={onChange}\n                                    key={field.name}\n                                    value={formData ? formData[field.name] : ''}\n                                /> : \n                                <SelectField\n                                    label={field.label}\n                                    option={eval(field.list).map((item) => ({ value: item.name, text: item.name}))}\n                                    showSearch\n                                    optionFilterProp=\"children\"\n                                    value={formData ? formData[field.name] : ''}\n                                    showArrow={false}\n                                    onSearch={(value) => handleSearch(field,value)}\n                                    onChange={(value) => onSelectChange(field.name, value)}\n                                    filterOption={(input, option) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    filterSort={(optionA, optionB) =>\n                                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                    }\n                                    key={field.name}\n                                />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default ConsignmentModal;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Typography, Col } from 'antd';\nimport BulkFieldData from '../../data/BulkFieldData';\nimport InputField from '../common/InputField';\nimport { createBulkConsignment, createConsignment, getAllGodowns, getAllItems, getAllSuppliers, getAllTransporters, updateConsignment } from '../../api'; \nimport SelectField from '../common/SelectField';\nimport PackageComponent from '../common/PackageComponent';\nimport PackageData from '../../data/PackageData';\nconst { Title } = Typography;\n\nconst BulkConsignmentModal = ({ visible , setVisible ,data, fetchConsignments}) => {\n\n    const initialData = BulkFieldData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n    const [packageList, setPackageList] = useState([]);\n    const [items, setItems] = useState([]);\n    const [fitems, setFItems] = useState([]);\n\n    const [suppliers, setSuppliers] = useState([]);\n    const [fsuppliers, setFSuppliers] = useState([]);\n\n    const [transporters, setTransporters] = useState([]);\n    const [ftransporters, setFTransporters] = useState([]);\n\n    const [godowns, setGodowns] = useState([]);\n    const [fgodowns, setFGodowns] = useState([]);\n    \n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(initialData);\n        setPackageList([]);\n        fetchItems();\n    },[])\n\n    const onClose = () => {\n        setVisible(false);\n        setFormData(initialData);\n        setPackageList([]);\n    }\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n        console.log(packageList)\n\n        if(packageList.length == 0){\n            swal(\"Atleast 1 pacakge is needed\", \"validation\");\n            return;\n        }\n    \n        formData.packageList = packageList;\n        let response = await createBulkConsignment(formData);\n        console.log(response);\n        if(response?.data?.status == true){\n            swal(\"Success\" , \"Succesfully added all consignments details\");\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", \"error\");\n        }\n        \n\n        if(close) { \n            onClose();\n        }\n\n        await fetchConsignments();\n    }\n\n   \n\n    const fetchItems = async () => {\n        const response = await getAllItems();\n\n        const items = response?.data?.entity;\n        setItems(items);\n        setFItems(items);\n\n        const responses = await getAllSuppliers();\n\n        const suppliers = responses?.data?.entity;\n        setSuppliers(suppliers);\n        setFSuppliers(suppliers);\n\n        const trresponses = await getAllTransporters();\n\n        const transporters = trresponses?.data?.entity;\n        setTransporters(transporters);\n        setFTransporters(transporters);\n\n        const godownResponse = await getAllGodowns();\n        setGodowns(godownResponse?.data?.entity);\n        setFGodowns(godownResponse?.data?.entity);\n    }\n\n    \n\n    const onSelectChange = (name, value) => {\n        setFormData({...formData,[name]: value});\n    }\n\n    const handleSearch = (field, value) => {\n        if (value) {\n            eval(`set${field.label}s`)([...eval(`f${field.list}`),{ name: value }]);\n        }\n        else {\n            eval(`set${field.label}s`)(eval(`f${field.list}`));\n        }\n    }\n\n    const setPackageData = (index, data) => {\n        packageList[index] = data;\n        setPackageList(packageList);\n    }\n\n    const renderPackages = () => {\n\n        const renderList = [];\n\n\n        if(formData?.numberOfPackage && formData?.numberOfPackage !== ''){\n            const count = parseInt(formData.numberOfPackage)\n\n            if(count > 100 )  { \n                swal('Maximum 100 Packages allowed to insert in bulk', 'validation');\n                setFormData({...formData, numberOfPackage: count})\n            }\n            for(let i = 0 ; i < count && i < 100; i++){\n                renderList.push(\n                    <PackageComponent items={items} key={i} index={i} setPackageData={setPackageData} handleSearch={handleSearch}/>\n                )\n            }\n            \n        } \n       \n        \n\n        return renderList;\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Bulk Consignment`}\n            visible={visible}\n            width={\"85%\"}\n            style={{ top: 20 }}\n            onCancel={() => onClose()}\n            footer={[\n            <Button key=\"cancel\" onClick={() => onClose()}>\n                Cancel\n            </Button>,\n            <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                Save\n            </Button>,\n            <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                Save and Close\n            </Button>,\n            ]}\n        >\n            <div>\n                <Row>\n                    { \n                        BulkFieldData.map((field) => field.type == 'input' ?\n                                <InputField \n                                    label={field.label}\n                                    type={field.inputType} \n                                    name={field.name}\n                                    onChange={onChange}\n                                    key={field.name}\n                                    value={formData ? formData[field.name] : ''}\n                                /> : \n                                <SelectField\n                                    label={field.label}\n                                    option={eval(field.list).map((item) => ({ value: item.name, text: item.name}))}\n                                    showSearch\n                                    optionFilterProp=\"children\"\n                                    value={formData ? formData[field.name] : ''}\n                                    showArrow={false}\n                                    onSearch={(value) => handleSearch(field,value)}\n                                    onChange={(value) => onSelectChange(field.name, value)}\n                                    filterOption={(input, option) =>\n                                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    filterSort={(optionA, optionB) =>\n                                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                    }\n                                    key={field.name}\n                                />\n                        )\n                    }     \n                </Row>\n            </div>\n\n            <div id='packageDiv' className='ml-24'>\n                <Title level={3} className=\"home-title\">Packages</Title>\n                <div>\n                <Row>\n                    {\n                        PackageData.map((field,index) =>\n                        <Col span={field.name === 'item'? 8 : 3} key={index} className='border-4'>\n                            <h3 className='px-2 pt-2 text-lg font-bold'>{field.label}</h3>\n                        </Col>)\n                    }\n                \n                </Row>\n                { renderPackages() }\n                </div>\n               \n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default BulkConsignmentModal;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography, Tabs } from 'antd';\nimport InputField from '../common/InputField';\nimport { createChallan, getAllGodowns, getConsignmentsForChallan, getConsignmentsForLocation } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport ChallanData from '../../data/ChallanData';\nimport SelectField from '../common/SelectField';\nimport Filter from '../Filter';\nimport ConChallanData from '../../data/ConChallanData';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;1\nconst { TabPane } = Tabs;\n\n\nconst ChallanModal = ({ visible , setVisible , data , callback}) => {\n\n    const initialData = ChallanData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    initialData.selectedRowKeys = [];\n    initialData.selectedRows = [];\n    const [formData, setFormData] = useState(initialData);\n    const [godowns,setGodowns] = useState([]);\n    const [consigments,setConsignments] = useState([]);\n\n    const getGodowns = async () => {\n        const list = await getAllGodowns();\n        setGodowns(list?.data?.entity);\n    }\n\n    const clearData = () => {\n        setFormData(initialData);\n    }\n\n    const setEditData = async (data) => {\n        const selectedRowKeys = data.challanConsignments.map((obj) => obj.consignmentId);\n        \n        const editData = { fromGodownId: data.godownId, toGodownId: data.toGodownId , selectedRowKeys, selectedRows: []};\n        const response = await getConsignmentsForChallan(data.id);\n        if(response?.data?.entity){\n            editData.selectedRows = getConsignmentObject(response?.data?.entity);\n        }\n        setFormData({...editData});\n    }\n\n    useEffect(() => {\n        if (data) {\n            setEditData(data)\n        }\n        else{\n            clearData();\n        }\n        \n        getGodowns();\n    },[visible,data])\n\n    const onSubmit = async (close) => {\n        const { fromGodownId, toGodownId, selectedRowKeys } = formData;\n        const fromGodown = godowns.find((godown) => godown.name == fromGodownId);\n        const toGodown = godowns.find((godown) => godown.name == toGodownId);\n       \n        const data = { fromGodownId: fromGodown.id, toGodownId: toGodown.id, consigments: selectedRowKeys };\n        let response = await createChallan(data);\n        console.log(response)\n        if(response?.data?.status == true){\n            swal(\"Succesfully generated challan with Challan Number \" + response?.data?.entity?.challan.number, \"success\");\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", \"error\");\n        }\n\n        if(close){\n            setVisible(false);\n            clearData()\n        } \n        \n\n        await callback();\n    }\n\n\n    const getConsignmentObject = (con) => {\n        return con ? con.map(({ id, consignmentNo, privartMark, item, rate },index) => \n        ({ id, consignmentNo,  privartMark, item, rate, key: index + (new Date().getTime() + Math.random() * 10000)})) : null;\n    }\n\n    const onSelectChange = async (name, value, manual, editData) => {\n        if(name === 'fromGodownId'){\n            const fromGodown = godowns.find((godown) => godown.name == value);\n            if(fromGodown){\n                const response = await getConsignmentsForLocation(fromGodown.id);\n\n\n                if(response?.data?.entity?.length > 0){\n                    const consi = response?.data?.entity.map((data) => data.consignments);\n                    if(manual){\n                        let selectedRows = consi.filter((obj) => data.challanConsignments.findIndex((cc) => cc.consignmentId == obj.id) >= 0);\n                        console.log(getConsignmentObject(selectedRows));\n                        setConsignments(consi);\n                        return;\n                    }\n                    else{\n                        setConsignments(consi);\n                    }\n                }\n                else{\n                    setConsignments([]);\n                }\n            }\n            \n        }\n       \n        setFormData({...formData,[name]: value});\n       \n    }\n\n    const uniqueMap = consigments && consigments.length > 0 ? consigments.reduce((previous, current) => {\n            for(let key in current){\n                if(!previous[key]){\n                    previous[key] = new Set();\n                }\n                previous[key].add(current[key]);\n            }\n\n            return previous;\n    },{}) : {};\n\n    const columns = ConChallanData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={false} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name + (new Date().getTime() + Math.random() * 10000),\n        width: '100px'\n    }));\n\n    const rowSelection = {\n        selectedRowKeys: formData.selectedRowKeys,\n        onChange: (selectedRowKeys, selectedRows) => {\n            setFormData({...formData, selectedRowKeys,selectedRows});\n        }\n    };\n\n    const onRemove = (data) => {\n        const index = formData.selectedRows.findIndex((row) => row.id == data.id)\n        formData.selectedRows.splice(index, 1);\n        setFormData({...formData, selectedRowKeys: formData.selectedRows.map((row) => row.id),selectedRows});\n    }\n\n    const onTabChange = (key) => {\n        //console.log(key);\n    };\n\n    const removeCol = {\n        title: 'Remove Selection',\n        key: 'operation'  + (new Date().getTime() + Math.random() * 10000),\n        fixed: 'right',\n        width: 10,\n        render: (data) => {\n            return (\n                <>\n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onRemove(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                    \n                </>\n            );\n        },\n    };\n\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Generate'} Challan`}\n            visible={visible}\n            width={\"80%\"}\n            style={{ top: 10 }}\n            onCancel={() => setVisible(false)}\n            footer={data ? null : [\n                <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                    Cancel\n                </Button>,\n                <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                    Save\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save and Close\n                </Button>,\n                ]}\n        >\n            <div>\n                <Row className='border-b-2 m-b-5'>\n                    { \n                        ChallanData.map((field) =>\n                        <SelectField\n                            label={field.label}\n                            option={eval(field.list).map((item) => ({ value: item.name, text: item.name}))}\n                            showSearch\n                            optionFilterProp=\"children\"\n                            value={formData ? formData[field.name] : ''}\n                            showArrow={false}\n                            onChange={(value) => onSelectChange(field.name, value)}\n                            filterOption={(input, option) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            filterSort={(optionA, optionB) =>\n                                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                            }\n                            key={field.name}\n                        />\n                        )\n                    }     \n                </Row>\n\n\n                <Tabs defaultActiveKey={data ? '2' : '1'} onChange={onTabChange}>\n                    { data? null : <TabPane tab=\"Select Consignments\" key=\"1\" >\n                        <Row>\n                        {\n                            formData.fromGodownId == '' ?\n                            <Col span={24}> <h3 className='text-center'> Please select source godown</h3> </Col> :\n                            <Col span={24}>\n                                 <Table\n                                    dataSource={\n                                        getConsignmentObject(consigments)\n                                    } \n                                    columns={columns}\n                                    bordered\n                                    pagination={{}}\n                                    rowKey={(record) => `${record.id}`}\n                                    rowSelection={rowSelection}\n                                />\n                            </Col>\n                        }\n                    </Row>\n                    </TabPane> }\n                    <TabPane tab=\"Selected Consignments\" key=\"2\">\n                       \n                        {\n                            formData.selectedRows.length == 0 ?\n                            <Col span={24}> <h3 className='text-center'>  No Consignments Selected  </h3> </Col> :\n                            <Col span={24}>\n                                 <Table\n                                    dataSource={\n                                        formData.selectedRows\n                                    } \n                                    columns={data? columns : [...columns,removeCol]}\n                                    bordered\n                                    pagination={{}}\n                                    rowKey={(record) => `${record.id}`}\n                                />\n                            </Col>\n                        }\n                    </TabPane>\n                </Tabs>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default ChallanModal;","const ConChallanData = [\n    {\n        label : \"Consignment Number\",\n        name: 'consignmentNo',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Private Mark\",\n        name: 'privartMark',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Item\",\n        name: 'item',\n        type: 'select',\n        inputType: 'text',\n        list: 'items'\n    },\n    {\n        label : \"Rate\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    }\n]\n\nexport default ConChallanData;","import axios from 'axios';\n\nconst url = `http://${window.location.hostname}:8000`;\n//const url = `http://ec2-3-111-57-30.ap-south-1.compute.amazonaws.com:8000`;\nconst API = axios.create({ baseURL : url});\n\nexport const getAllConsigment = (filter) => API.get(`/consigments?${filter ? `consignmentNo=${filter}` : \"\"}`);\nexport const createConsignment = (consigment) => API.post(\"/consigments\", consigment);\nexport const getConsignment  = (id) => API.get(`/consigments/${id}`);\nexport const updateConsignment = (id, updatedConsigment) => API.put(`/consigments/${id}`, updatedConsigment);\nexport const deleteConsignment= (id) => API.delete(`/consigments/${id}`);\n\nexport const createBulkConsignment = (consigment) => API.post(\"/consigments/bulk\", consigment);\n\nexport const changeConsignmentLocation = (id,data) => API.post(`/consigments/${id}/godowns`,data);\n\nexport const getAllGodowns = () => API.get(\"/godowns\");\nexport const createGodown = (godown) => API.post(\"/godowns\", godown);\nexport const updateGodown = (id,godown) => API.put(`/godowns/${id}`, godown);\nexport const deleteGodown = (id) => API.delete(`/godowns/${id}`);\n\nexport const getAllItems = () => API.get(\"/items\");\nexport const createItem = (item) => API.post(\"/items\", item);\nexport const updateItem = (id,item) => API.put(`/items/${id}`, item);\nexport const deleteItem = (id) => API.delete(`/items/${id}`);\n\nexport const getAllSuppliers = () => API.get(\"/suppliers\");\nexport const createSupplier = (supplier) => API.post(\"/suppliers\", supplier);\nexport const updateSupplier = (id,supplier) => API.put(`/suppliers/${id}`, supplier);\nexport const deleteSupplier = (id) => API.delete(`/suppliers/${id}`);\n\nexport const getAllTransporters = () => API.get(\"/transporters\");\nexport const getAllStats = () => API.get(\"/stats\");\n\nexport const getAllConsigmentWithFilter = (filter) => API.get(`/consigments?consignmentNo=${filter}`);\n\nexport const createChallan = (data) => API.post(\"/challans\", data);\nexport const getAllChallans = () => API.get('/challans');\n\nexport const getFilterMetaData = () => API.get(\"/filter-data\");\nexport const filterConsignments = (filter) => API.post(\"/consigments/filter\", filter);\n\nexport const getConsignmentsForLocation = (godownId) => API.get(`/godowns/${godownId}/consigments`);\n\nexport const getChallansForConsignments = (consignmentId) => API.get(`/consigments/${consignmentId}/challans`);\n\nexport const getConsignmentsForChallan = (challanId) => API.get(`/challans/${challanId}/consigments`);\n\n\n","const PackageItemData = [\n    {\n        label : \"Item\",\n        name: 'item',\n        type: 'select',\n        inputType: 'text',\n        list: 'items'\n    },\n    {\n        label : \"Rate\",\n        name: 'rate',\n        type: 'input',\n        inputType: 'number'\n    }\n]\n\nexport default PackageItemData;","import { MinusSquareOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Row, Select } from \"antd\";\nimport { useState } from \"react\";\nimport PackageData from \"../../data/PackageData\";\nimport PackageItemData from \"../../data/PackageItemData\";\n\nconst PackageComponent = ({index, setPackageData, items , handleSearch }) => {\n\n    const initialData = PackageData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    initialData.itemsList = [];\n    const [formData, setFormData] = useState(initialData);\n\n\n    const onChange = (e) => {\n        let data = {...formData,[e.target.name]: e.target.value};\n        setFormData(data);\n        setPackageData(index, data)\n    }\n\n    const onSelectChange = (name, value) => {\n        let data = {...formData,[name]: value};\n        setFormData(data);\n        setPackageData(index, data);\n    }\n\n    const setItemData = (index, data) => {\n        formData.itemsList[index] = data;\n        setFormData({...formData});\n    }\n\n    const onAddMoreitems = () => {\n\n        const initialData = PackageData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n        initialData.privateMark = formData.privateMark;\n        formData.itemsList.push(initialData)\n        setFormData({...formData});\n    }\n\n    const onRemoveMoreItems = (index) => {\n        formData.itemsList.splice(index, 1)\n        setFormData({...formData});\n    }\n    \n\n    return (\n        <>\n        \n        <Row>\n            {\n                 PackageData.map((field) => field.type == 'input'?\n                    <Col span={3} className='border-4'>\n                        <input \n                            placeholder={field.label}\n                            type={field.inputType} \n                            name={field.name}\n                            onChange={onChange}\n                            key={field.name}\n                            value={formData ? formData[field.name] : ''}\n                            className=\"w-full py-2 px-2 mt-2\"\n                        />  \n                    </Col> : \n                    <Col span={8} className='border-4 p-2'>\n                        <Select \n                            className=\"w-full\" \n                            placeholder={field.label}\n                            showSearch\n                            optionFilterProp=\"children\"\n                            value={formData ? formData[field.name] : ''}\n                            showArrow={false}\n                            onSearch={(value) => handleSearch(field,value)}\n                            onChange={(value) => onSelectChange(field.name, value)}\n                            filterOption={(input, option) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            filterSort={(optionA, optionB) =>\n                                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                            }\n                            key={field.name}\n                            >\n                                { items.map((ele,index) => <Option value={ele.name} key={index}>{ele.name}</Option>) }\n                        </Select>\n                    </Col>  \n                )\n            }\n\n            <Col span={1} className='p-2'>\n                <a type=\"primary\" onClick={() => onAddMoreitems()} className='text-lg' title=\"add more items to tha package\">\n                    <PlusSquareOutlined /> \n                </a>\n            </Col>\n           \n        </Row>\n        {\n            formData.itemsList.map(\n                (data, index) => <ItemComponent\n                    index={index}\n                    formData={data}\n                    setItemData={setItemData}\n                    items={items}\n                    handleSearch={handleSearch}\n                    onRemoveMoreItems={onRemoveMoreItems}\n                />\n            )\n        }\n        </>\n    )\n}\n\nexport default PackageComponent;\n\n\nfunction ItemComponent({ index, setItemData, formData, items, handleSearch , onRemoveMoreItems}){\n\n\n    const onChange = (e) => {\n        let data = {...formData,[e.target.name]: e.target.value};\n        setItemData(index, data)\n    }\n\n    const onSelectChange = (name, value) => {\n        let data = {...formData,[name]: value};\n        setItemData(index, data);\n    }\n\n    return (\n        <Row>\n             {  [1,2,4].map((v , index) => <Col span={3} key={index}></Col>)  }\n             {\n                PackageItemData.map((field) => field.type == 'input'?\n                    <Col span={3} className='border-4' key={index}>\n                        <input \n                            placeholder={field.label}\n                            type={field.inputType} \n                            name={field.name}\n                            onChange={onChange}\n                            key={field.name}\n                            value={formData ? formData[field.name] : ''}\n                            className=\"w-full py-2 px-2 mt-2\"\n                        />  \n                    </Col> : \n                    <Col span={8} className='border-4 p-2'>\n                        <Select \n                            className=\"w-full\" \n                            placeholder={field.label}\n                            showSearch\n                            optionFilterProp=\"children\"\n                            value={formData ? formData[field.name] : ''}\n                            showArrow={false}\n                            onSearch={(value) => handleSearch(field,value)}\n                            onChange={(value) => onSelectChange(field.name, value)}\n                            filterOption={(input, option) =>\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            filterSort={(optionA, optionB) =>\n                                optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                            }\n                            key={field.name}\n                            >\n                                { items.map((ele,index) => <Option value={ele.name} key={index}>{ele.name}</Option>) }\n                        </Select>\n                    </Col>  \n                )\n            }\n\n            <Col span={1} className='p-2'>\n                <a type=\"primary\" onClick={() => onRemoveMoreItems(index)} className='text-lg' title=\"delete items to tha package\">\n                    <MinusSquareOutlined /> \n                </a>\n            </Col>\n        </Row>\n    )\n}","const ChallanData = [\n    {\n        label : \"Challan Number\",\n        name: 'number',\n        type: 'select',\n        inputType: 'text',\n    },\n    {\n        label : \"Source Godown\",\n        name: 'godownId',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    },\n    {\n        label : \"Destination Godown\",\n        name: 'toGodownId',\n        type: 'select',\n        inputType: 'text',\n        list: 'godowns'\n    }\n];\n\nexport default ChallanData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport { getChallansForConsignments } from '../../api'; \nimport moment from 'moment';\nimport ChallanData from '../../data/ChallanDataAlt';\nconst { Title } = Typography;\n\nconst LocationModal = ({ visible , setVisible , consigmentData}) => {\n\n    const [consigment,setConsigment] = useState(consigmentData);\n    const [challans,setChallans] = useState([]);\n\n    const getChallansWithConsignmentId = async (consigment) => {\n        const response = await getChallansForConsignments(consigment.id);\n\n        console.log(response);\n        if(response?.data?.entity){\n            const datas = response?.data?.entity;\n            \n            setChallans(datas.map((data) => (\n                {\n                    number: data.challan.number,\n                    godownId: data.fromGodown.name,\n                    toGodownId: data.toGodown.name\n                }\n            )));\n        }\n    }\n\n    useEffect(() => {\n        getChallansWithConsignmentId(consigmentData);\n    },[consigmentData]);\n\n    const fieldData = ChallanData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '200px'\n    }));\n\n\n\n    return (\n        <>\n        <Modal\n            title={`Track Consignment`}\n            visible={visible}\n            width={\"45%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n            <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                Close\n            </Button>\n            ]}\n        >\n            <div>\n               \n                <Row>\n                    <Col span={24} className='my-5 border-b-4'>\n                    <   Title level={4} className=\"home-title\"> Current Godown : { challans.length > 0 ? challans[challans.length - 1].toGodownId: consigmentData?.godown}</Title> \n                    </Col>\n\n                    <Title level={5} className=\"home-title\">Consignment's Track History</Title> \n                    <Col span={24}>\n                        <Table\n                            columns={columns}\n                            dataSource={challans}\n                            bordered\n                            pagination={ {}}\n                        />\n                    </Col>\n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default LocationModal;","import { CopyOutlined, DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Table, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport FieldData from '../data/FieldData';\nimport ConsignmentModal from './modals/ConsignmentModal';\nimport LocationModal from \"./modals/LocationModal\";\nimport { createConsignment, deleteConsignment } from \"../api\";\nimport BulkConsignmentModal from \"./modals/BulkConsignmentModal\";\nconst { Title } = Typography;\nconst Consigments = ({ consigments , fetchConsignments, filterApplied}) => {\n\n    const [visibleCM, setVisibleCM] = useState(false);\n    const [editData, setEditData] = useState(null);\n    const [actionColumn,SetActionCol] = useState(true);\n    const [visibleLM, setVisibleLM] = useState(false);\n    const [editLData, setLEditData] = useState(null);\n    const [visibleBCM, setVisibleBCM] = useState(false);\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisibleCM(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisibleCM(true);\n    }\n\n    const onAddBulk = () => {\n        setEditData(null)\n        setVisibleBCM(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteConsignment(data.id);\n            await fetchConsignments();\n        } \n    }\n\n    const onCopy = async(data) => {\n        let response = await createConsignment(data);\n        console.log(response);\n        if(response?.data?.status == true){\n            swal(\"Success\" , \"Succesfully copied and created the consignment\");\n        }\n        else{\n            swal(\"OOPS Something Went wrong\", \"error\");\n        }\n\n        await fetchConsignments();\n    }\n\n    const onChangeLocation = (data) => {\n        setEditData({...data})\n        setVisibleLM(true);\n    }\n   \n    const uniqueMap = consigments && consigments.length > 0 ? consigments.reduce((previous, current) => {\n            for(let key in current){\n                if(!previous[key]){\n                    previous[key] = new Set();\n                }\n                previous[key].add(current[key]);\n            }\n\n            return previous;\n    },{}) : {};\n\n    const columns = FieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={false} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name == 'godown' ? 'godownName' : column.name,\n        key: column.name + (new Date().getTime() + Math.random() * 10000),\n        width: '100px',\n        filters: uniqueMap[column.name] ? Array.from(uniqueMap[column.name]).map((value) => ({ text: value, value: value})) : [],\n        filterMode: 'tree',\n        filterSearch: true,\n        onFilter: (value, record) => record[column.name] ? record[column.name].startsWith(value) : false,\n    }));\n\n    if(actionColumn){\n        const actionCol = {\n            title: 'Action',\n            key: 'operation'  + (new Date().getTime() + Math.random() * 10000),\n            fixed: 'right',\n            width: 250,\n            render: (data) => {\n                return (\n                    <>\n                        <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                            <EditOutlined />\n                        </Button>\n                        \n                        <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                            <DeleteOutlined />\n                        </Button>\n    \n                        <Button key={'location'+data.id} type=\"secondary\" onClick={() => onChangeLocation(data)} className=\"ml-2\" title=\"Delete\">\n                            <HeatMapOutlined />\n                        </Button>\n\n                        <Button key={'copy'+data.id} type=\"dashed\" onClick={() => onCopy(data)} className=\"ml-2\" title=\"Copy\">\n                            <CopyOutlined />\n                        </Button>\n                        \n                    </>\n                );\n            },\n        };\n    \n        columns.push(actionCol);\n    }\n    const searchValue = document.getElementById('searchByConNo')?.value;\n    const getGodownName = (con) => {\n        return con.godowns.length > 0 ? con.godowns[0].name: con.godown;\n    }   \n\n    return (\n        <>\n         <div className=\"home-heading-container\">\n            <Title level={2} className=\"home-title\">Consignments</Title>\n            <div>{filterApplied ? `(Filter Applied)` : (searchValue != '' ? ` (Search results - \"${searchValue}\")` : '')}</div>\n            <Title level={3} className=\"show-more\">\n                <Button className=\"mr-4\" onClick={() => onAddBulk()}><PlusSquareOutlined />Add Bulk Consigments</Button>\n                <a className=\"text-sm mr-4\" onClick={() => SetActionCol(!actionColumn)}>Action</a>\n                <Button onClick={() => onAdd()}><PlusSquareOutlined />Add Consigments</Button>\n            </Title>\n        </div>\n        <Row className=\"w-full\">\n            <Col span={24}>\n                <Table\n                    dataSource={consigments ? consigments.map((con,index) => ({ ...con,godownName: getGodownName(con), key: index + (new Date().getTime() + Math.random() * 10000)})) : null } \n                    columns={columns}\n                    bordered\n                    scroll={{ x: 1600 }}\n                    pagination={{}}\n                    rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                />\n            </Col>\n        </Row>\n        <BulkConsignmentModal visible={visibleBCM} setVisible={setVisibleBCM} fetchConsignments={fetchConsignments} />\n        <ConsignmentModal visible={visibleCM} setVisible={setVisibleCM} data={editData} fetchConsignments={fetchConsignments} />\n        <LocationModal visible={visibleLM} setVisible={setVisibleLM} consigmentData = {editData} fetchConsignments={fetchConsignments}/>\n        </>\n    )\n}\n\nexport default Consigments;","const GodownData = [\n    {\n        label : \"Godown Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Address\",\n        name: 'address',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default GodownData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createGodown, updateGodown } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport GodownData from '../../data/GodownData';\n\n\nconst GodownModal = ({ visible , setVisible , data , callback}) => {\n\n    const initialData = GodownData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateGodown(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated godown details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createGodown(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added godown details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Godown`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n                <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                    Cancel\n                </Button>,\n                <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                    Save\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save and Close\n                </Button>,\n                ]}\n        >\n            <div>\n                <Row>\n                    { \n                        GodownData.map((field) =>\n                            <InputField \n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                                lcol = {6}\n                                icol = {18}\n                            />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default GodownModal;","import { DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nimport { deleteGodown, getAllGodowns } from \"../api\";\nimport GodownData from \"../data/GodownData\";\nimport GodownModal from \"./modals/GodownModal\";\nconst { Title } = Typography;\nconst Godowns = ({ refresh }) => {\n\n    const [godowns, setGodowns] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [editData, setEditData] = useState(null);\n\n    const fetchGodowns = async () => {\n        const response = await getAllGodowns();\n        setGodowns(response?.data?.entity);\n    }\n\n    useEffect(() => {\n        fetchGodowns();\n    },[]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisible(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisible(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteGodown(data.id);\n            fetchGodowns();\n            refresh();\n        } \n    }\n\n    const fieldData = GodownData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    return (\n        <>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Godowns</Title>\n                <Title level={3} className=\"show-more\"><Button onClick={() => onAdd()}><PlusSquareOutlined />Add Godowns</Button></Title>\n            </div>\n            <Row className=\"w-full\">\n                <Col span={24}>\n                    <Table\n                        dataSource={godowns} \n                        columns={columns}\n                        bordered\n                        pagination={ {}}\n                        rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                    />\n                </Col>\n            </Row> \n            <GodownModal visible={visible} setVisible={setVisible} data={editData} callback={fetchGodowns}/>       \n        </>\n    );\n}\n\nexport default Godowns;\n\n","const ItemData = [\n    {\n        label : \"Item Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default ItemData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createItem, updateItem } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport ItemData from '../../data/ItemData';\n\n\nconst ItemModal = ({ visible , setVisible , data , callback}) => {\n\n    const initialData = ItemData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateItem(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated item details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createItem(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added item details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Item`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n                <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                    Cancel\n                </Button>,\n                <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                    Save\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save and Close\n                </Button>,\n                ]}\n        >\n            <div>\n                <Row>\n                    { \n                        ItemData.map((field) =>\n                            <InputField \n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                                lcol = {6}\n                                icol = {18}\n                            />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default ItemModal;","import { DeleteOutlined, EditOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nimport { deleteItem, getAllItems } from \"../api\";\nimport ItemData from \"../data/ItemData\";\nimport ItemModal from \"./modals/ItemModal\";\nconst { Title } = Typography;\nconst Items = ({ }) => {\n\n    const [items, setItems] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [editData, setEditData] = useState(null);\n\n    const fetchItems = async () => {\n        const response = await getAllItems();\n        setItems(response?.data?.entity);\n    }\n\n    useEffect(() => {\n        fetchItems();\n    },[]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisible(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisible(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteItem(data.id);\n            fetchItems();\n            refresh();\n        } \n    }\n\n    const fieldData = ItemData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    return (\n        <>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Items</Title>\n                <Title level={3} className=\"show-more\"><Button onClick={() => onAdd()}><PlusSquareOutlined />Add Item</Button></Title>\n            </div>\n            <Row className=\"w-full\">\n                <Col span={24}>\n                    <Table\n                        dataSource={items}\n                        columns={columns}\n                        bordered\n                        pagination={ {}}\n                    />\n                </Col>\n            </Row> \n            <ItemModal visible={visible} setVisible={setVisible} data={editData} callback={fetchItems}/>       \n        </>\n    );\n}\n\nexport default Items;\n\n","const SupplierData = [\n    {\n        label : \"Supplier Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n];\n\nexport default SupplierData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createSupplier, updateSupplier } from '../../api'; \nimport moment from 'moment';\nimport swal from 'sweetalert';\nimport SupplierData from '../../data/SupplierData';\n\n\nconst SupplierModal = ({ visible , setVisible , data , callback}) => {\n\n    const initialData = SupplierData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(() => {\n        setFormData(data);\n    },[data])\n\n    const onSubmit = async (close) => {\n        console.log(formData);\n    \n        if(data) {\n            let response = await updateSupplier(data.id,formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated supplier details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createSupplier(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added supplier details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n\n        if(close) setVisible(false);\n\n        await callback();\n    }\n\n    return (\n        <>\n        <Modal\n            title={`${data ? 'Edit' : 'Add'} Supplier`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            onCancel={() => setVisible(false)}\n            footer={[\n                <Button key=\"cancel\" onClick={() => setVisible(false)}>\n                    Cancel\n                </Button>,\n                <Button key=\"save\" type=\"primary\" onClick={() => onSubmit()}>\n                    Save\n                </Button>,\n                <Button key=\"savclose\" type=\"primary\" onClick={() => onSubmit(true)}>\n                    Save and Close\n                </Button>,\n                ]}\n        >\n            <div>\n                <Row>\n                    { \n                        SupplierData.map((field) =>\n                            <InputField \n                                label={field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                                lcol = {6}\n                                icol = {18}\n                            />\n                        )\n                    }     \n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default SupplierModal;","import { DeleteOutlined, EditOutlined, HeatMapOutlined, PlusSquareOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popconfirm, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nimport { deleteSupplier, getAllSuppliers } from \"../api\";\nimport SupplierData from \"../data/SupplierData\";\nimport SupplierModal from \"./modals/SupplierModal\";\nconst { Title } = Typography;\nconst Suppliers = ({ refresh }) => {\n\n    const [suppliers, setSuppliers] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [editData, setEditData] = useState(null);\n\n    const fetchSuppliers = async () => {\n        const response = await getAllSuppliers();\n        setSuppliers(response?.data?.entity);\n    }\n\n    useEffect(() => {\n        fetchSuppliers();\n    },[]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisible(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisible(true);\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteSupplier(data.id);\n            fetchSuppliers();\n            refresh();\n        } \n    }\n\n    const fieldData = SupplierData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    return (\n        <>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Suppliers</Title>\n                <Title level={3} className=\"show-more\"><Button onClick={() => onAdd()}><PlusSquareOutlined />Add Suppliers</Button></Title>\n            </div>\n            <Row className=\"w-full\">\n                <Col span={24}>\n                    <Table\n                        dataSource={suppliers} \n                        columns={columns}\n                        bordered\n                        pagination={ {}}\n                        rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                    />\n                </Col>\n            </Row> \n            <SupplierModal visible={visible} setVisible={setVisible} data={editData} callback={fetchSuppliers}/>       \n        </>\n    );\n}\n\nexport default Suppliers;\n\n","import { DeleteOutlined, EditOutlined, FundViewOutlined, PlusSquareOutlined, ReadOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Row, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\n\nimport { getAllChallans } from \"../api\";\nimport ChallanData from \"../data/ChallanDataAlt\";\nimport ChallanModal from \"./modals/ChallanModal\";\nconst { Title } = Typography;\nconst Challans = ({ }) => {\n\n    const [items, setChallans] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [editData, setEditData] = useState(null);\n\n    const fetchChallans = async () => {\n        const response = await getAllChallans();\n        console.log(response);\n        if(response?.data?.entity){\n            const challans = response?.data?.entity;\n\n            const data = challans.map((challan) => ({ ...challan, godownId: challan.godown.name, toGodownId: challan.toGodown.name}))\n            setChallans(data);\n        }\n    }\n\n    useEffect(() => {\n        fetchChallans();\n    },[]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n        setVisible(true);\n    }\n\n    const onAdd = () => {\n        setEditData(null)\n        setVisible(true);\n    }\n\n    const onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            await deleteItem(data.id);\n            fetchChallans();\n            refresh();\n        } \n    }\n\n    const fieldData = ChallanData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px'\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <ReadOutlined />\n                    </Button>\n                    {/*                     \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button> */}\n                </div>\n            );\n        },\n    });\n\n    return (\n        <>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Challans</Title>\n                <Title level={3} className=\"show-more\"><Button onClick={() => onAdd()}><PlusSquareOutlined />Generate Challans</Button></Title>\n            </div>\n            <Row className=\"w-full\">\n                <Col span={24}>\n                    <Table\n                        dataSource={items}\n                        columns={columns}\n                        bordered\n                        pagination={ {}}\n                    />\n                </Col>\n            </Row> \n            <ChallanModal visible={visible} setVisible={setVisible} data={editData} callback={fetchChallans}/>       \n        </>\n    );\n}\n\nexport default Challans;\n\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { getAllConsigment, getAllStats, getAllConsigmentWithFilter } from '../api/index.js';\nimport Consigments from './Consignments.js';\nimport Godowns from './Godowns.js';\nimport Items from './Items.js';\nimport Suppliers from './Suppliers.js';\nimport InputField from './common/InputField.js';\nimport Filter from './Filter.js';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Challans from './Challans.js';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n\n  const [consigments, setConsignments] = useState([]);\n  const [globalStats, setStats] = useState({\n      itemCount: 0,\n      consignmentCount: 0,\n      packageCount: 0,\n      supplierCount: 0,\n      godownCount: 0\n  });\n  const [filterApplied, setFilterApplied ] = useState(false);\n  useEffect(() => {\n    fetchConsignments();\n  },[]);\n\n  const fetchConsignments = async () => {\n    setFilterApplied(false);\n    const sValue = document.getElementById('searchByConNo').value;\n\n    const response = await getAllConsigment(sValue);\n    console.log(response)\n    setConsignments(response?.data?.entity);\n\n    const statsResponse = await getAllStats();\n    console.log(statsResponse)\n    setStats(statsResponse?.data?.entity);\n    \n  }\n\n  const filterCallback = (response) => {\n    setConsignments(response?.data?.entity);\n    setFilterApplied(true);\n  }\n\n  const serachConsignment = async (value) => {\n    await fetchConsignments();\n  }\n\n  const handleKeyPress = async (event) => {\n    if(event.key === 'Enter'){\n      await fetchConsignments();\n    }\n  }\n\n\n  return (\n    <>\n      <Title level={2} className=\"heading\" id='mainheader'>Stock Management Stats</Title>\n      <Row gutter={[32, 32]}>\n            <Col span={12}><Statistic title=\"Total Consigments\" value={globalStats?.consignmentCount ? globalStats.consignmentCount : 0 }/></Col>\n            <Col span={12}><Statistic title=\"Total Packages\" value={millify(globalStats?.packageCount ? globalStats.packageCount : 0)}/></Col>\n            <Col span={12}><Statistic title=\"Total Items\" value={millify(globalStats?.itemCount? globalStats.itemCount : 0)}/></Col>\n            <Col span={12}><Statistic title=\"Total Godowns\" value={millify(globalStats?.godownCount ? globalStats.godownCount : 0)}/></Col>\n            <Col span={12}><Statistic title=\"Total Suppliers\" value={millify(globalStats?.supplierCount ? globalStats.supplierCount : 0)}/></Col>\n      </Row>\n      \n      <Row id='searchContainer'>\n        <InputField\n              label={'Search'}\n              placeholder={'consignment no, transporter, supplier, item, bill no, mr no,godown'}\n              type=\"text\"\n              name=\"searchByConNo\"\n              id=\"searchByConNo\"\n              onKeyPress={handleKeyPress}\n              icol={10}\n          />\n          <Col span={4}>\n                <Button type=\"primary\" className='mt-3 ml-4' onClick={(event) => serachConsignment(event.target.value)} title=\"Search\" >\n                    <SearchOutlined /> Search\n                </Button>\n          </Col>\n      </Row>\n      <Filter filterCallback={filterCallback} fetchConsignments={fetchConsignments}/>\n\n      <div id='consignments'>\n        <Consigments consigments={ consigments } fetchConsignments={fetchConsignments} filterApplied={filterApplied}/>\n      </div>\n      \n      <div id='challans'>\n        <Challans consigments={ consigments } refresh={fetchConsignments} />\n      </div>\n\n      <div id='godowns'>\n        <Godowns refresh={fetchConsignments} />\n      </div>\n      <div id='items'>\n        <Items refresh={fetchConsignments} />\n      </div>\n      <div id='suppliers'>\n        <Suppliers refresh={fetchConsignments} />\n      </div>\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar, Row, Col, Affix } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  const linkClick = (id) => {\n    var divElement = document.getElementById(id);\n    window.scroll({\n      top: divElement.offsetTop - 100//divElement.offsetHeight,//scroll to the bottom of the element\n      //behavior: 'smooth' //auto, smooth, initial, inherit\n    });\n  }\n\n  return (\n    <Affix offsetTop={0} id=''>\n        <Row className='bg-regal-blue p-2 pb-0'>\n          <Col span={3}>\n            <div className='flex w-full items-center'>\n              <Avatar src={icon} size=\"large\" />\n              <Typography.Title level={1} className=\"ml-2 mt-2\"><Link to=\"/\">SMA</Link></Typography.Title>\n              <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n            </div>\n            \n          </Col>    \n          <Col span={21}>\n          <div className='w-full bg-regal-blue'>\n            <Menu theme=\"dark\" mode=\"horizontal\" >\n              <Menu.Item icon={<HomeOutlined />} key={'home'}>\n                <Link to=\"/\" onClick={() => linkClick('mainheader')}>Home</Link>\n              </Menu.Item>\n              <Menu.Item icon={<FundOutlined />}  key={'Consignments'}>\n                <Link to=\"/#consignments\" onClick={() => linkClick('consignments')}>Consignments</Link>\n              </Menu.Item>\n              <Menu.Item icon={<MoneyCollectOutlined />}  key={'Godowns'}>\n                <Link to=\"/#godowns\" onClick={() => linkClick('godowns')}>Godowns</Link>\n              </Menu.Item>\n              <Menu.Item icon={<BulbOutlined />}  key={'Items'}>\n                <Link to=\"/#items\" onClick={() => linkClick('items')}>Items</Link>\n              </Menu.Item>\n            </Menu>\n            </div>\n      </Col>\n      \n    </Row>\n    </Affix>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Homepage, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div>\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      \n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { Col, Row } from \"antd\";\n\nconst InputField = ({label , lcol , icol, placeholder, ...inputProps }) => {\n    return (\n        <>\n            \n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol ? icol : 8} className=\"mb-3\">\n                    <input {...inputProps} placeholder={placeholder? placeholder : label} className=\"w-full py-2 px-2 mt-2 border-2\"/>\n                </Col>\n            \n            \n        </>\n    )\n}\n\nexport default InputField;","import { Col, Row, Select } from \"antd\";\nconst { Option } = Select;\n\nconst SelectField = ({label, option, selected, ...property}) => {\n    return (\n        <>\n                <Col span={4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={8} className=\"mb-3\">\n                    <div className=\"mt-5\">\n                        <Select className=\"w-full\" placeholder={label} {...property}>\n                            { option.map((ele,index) => <Option value={ele.value} key={index}>{ele.text}</Option>) }\n                        </Select>\n                    </div>\n                </Col> \n        </>\n    )\n}\n\nexport default SelectField"],"sourceRoot":""}